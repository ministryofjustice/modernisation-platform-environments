locals {

  ec2_instances = {

    oem = {

      cloudwatch_metric_alarms = merge(
        module.baseline_presets.cloudwatch_metric_alarms_by_sns_topic["dba_pagerduty"].ec2,
        module.baseline_presets.cloudwatch_metric_alarms_by_sns_topic["dba_pagerduty"].ec2_cwagent_linux,
        module.baseline_presets.cloudwatch_metric_alarms_by_sns_topic["dba_pagerduty"].ec2_instance_cwagent_collectd_service_status_os,
        module.baseline_presets.cloudwatch_metric_alarms_by_sns_topic["dba_pagerduty"].ec2_instance_cwagent_collectd_service_status_app,
        module.baseline_presets.cloudwatch_metric_alarms_by_sns_topic["dba_pagerduty"].ec2_instance_cwagent_collectd_oracle_db_connected,
        module.baseline_presets.cloudwatch_metric_alarms_by_sns_topic["dba_pagerduty"].ec2_instance_cwagent_collectd_oracle_db_backup,
      )

      config = {
        ami_name                      = "hmpps_ol_8_5_oracledb_19c_release_2023-08-07T16-14-04.275Z"
        ami_owner                     = "self"
        availability_zone             = "eu-west-2a"
        ebs_volumes_copy_all_from_ami = true
        iam_resource_names_prefix     = "ec2-database"
        ssm_parameters_prefix         = "ec2/" # TODO: remove
        secretsmanager_secrets_prefix = "ec2/"
        subnet_name                   = "data"

        instance_profile_policies = [
          "Ec2OracleEnterpriseManagerPolicy",
          "EC2Db",
          # "SSMManagedInstanceCoreReducedPolicy", # replace with arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
          "EC2S3BucketWriteAndDeleteAccessPolicy",
          "ImageBuilderS3BucketWriteAndDeleteAccessPolicy",
        ]
      }

      ebs_volumes = {
        "/dev/sdb" = { type = "gp3", label = "app", size = 100 } # /u01
        "/dev/sdc" = { type = "gp3", label = "app", size = 100 } # /u02
        "/dev/sde" = { type = "gp3", label = "data" }            # DATA01
        "/dev/sdf" = { type = "gp3", label = "data" }            # DATA02
        "/dev/sdg" = { type = "gp3", label = "data" }            # DATA03
        "/dev/sdh" = { type = "gp3", label = "data" }            # DATA04
        "/dev/sdi" = { type = "gp3", label = "data" }            # DATA05
        "/dev/sdj" = { type = "gp3", label = "flash" }           # FLASH01
        "/dev/sdk" = { type = "gp3", label = "flash" }           # FLASH02
        "/dev/sds" = { type = "gp3", label = "swap" }
      }

      ebs_volume_config = {
        data  = { total_size = 100 }
        flash = { total_size = 50 }
      }

      instance = {
        disable_api_termination      = false
        instance_type                = "r6i.xlarge"
        key_name                     = "ec2-user"
        metadata_options_http_tokens = "optional" # the Oracle installer cannot accommodate a token
        vpc_security_group_ids       = ["data-oem"]

        tags = {
          backup-plan = "daily-and-weekly"
        }
      }

      user_data_cloud_init = {
        args = {
          branch       = "main"
          ansible_args = "--tags ec2provision"
        }
        scripts = [ # paths are relative to templates/ dir
          "../../../modules/baseline_presets/ec2-user-data/install-ssm-agent.sh",
          "../../../modules/baseline_presets/ec2-user-data/ansible-ec2provision.sh.tftpl",
          "../../../modules/baseline_presets/ec2-user-data/post-ec2provision.sh",
        ]
      }

      route53_records = {
        create_internal_record = true
        create_external_record = true
      }

      secretsmanager_secrets = {
        asm-passwords = {
          description             = "Oracle ASM passwords generated by oracle-19c ansible role"
          recovery_window_in_days = 0 # so instances can be deleted and re-created without issue
        }
      }

      tags = {
        ami                  = "hmpps_ol_8_5_oracledb_19c" # not including as hardening role seems to cause an issue
        backup               = "false"                     # opt out of mod platform default backup plan
        component            = "data"
        instance-scheduling  = "skip-scheduling"
        licence-requirements = "Oracle Enterprise Management"
        os-major-version     = 8
        os-type              = "Linux"
        os-version           = "OL 8.5"
        server-type          = "hmpps-oem"
        # update-ssm-agent = "patchgroup1" # TODO add
      }
    }
  }
}
