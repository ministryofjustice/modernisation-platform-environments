  # aws_iam_service_linked_role.spot 
  # helm_release.amazon_prometheus_proxy 
  # helm_release.aws_cloudwatch_metrics 
  # helm_release.aws_for_fluent_bit 
  # helm_release.cert_manager 
  # helm_release.cert_manager_issuers 
  # helm_release.cluster_autoscaler 
  # helm_release.external_dns 
  # helm_release.external_secrets 
  # helm_release.external_secrets_cluster_secret_store 
  # helm_release.ingress_nginx 
  # helm_release.ingress_nginx_default_certificate 
  # helm_release.karpenter 
  # helm_release.karpenter_configuration 
  # helm_release.karpenter_crd 
  # helm_release.keda 
  # helm_release.kyverno 
  # kubernetes_annotations.gp2 
  # kubernetes_cluster_role.mwaa_external_secrets 
  # kubernetes_cluster_role_binding.mwaa_external_secrets 
  # kubernetes_manifest.eso_secretstore_data_production 
  # kubernetes_manifest.prometheus_operator_crds["alertmanagerconfigs"] 
  # kubernetes_manifest.prometheus_operator_crds["alertmanagers"] 
  # kubernetes_manifest.prometheus_operator_crds["podmonitors"] 
  # kubernetes_manifest.prometheus_operator_crds["probes"] 
  # kubernetes_manifest.prometheus_operator_crds["prometheus_agents"] 
  # kubernetes_manifest.prometheus_operator_crds["prometheuses"] 
  # kubernetes_manifest.prometheus_operator_crds["prometheusrules"] 
  # kubernetes_manifest.prometheus_operator_crds["scrapeconfigs"] 
  # kubernetes_manifest.prometheus_operator_crds["servicemonitors"] 
  # kubernetes_manifest.prometheus_operator_crds["thanosrulers"] 
  # kubernetes_manifest.ui_azure_external_secret 
  # kubernetes_manifest.ui_sentry_dsn_external_secret 
  # kubernetes_namespace.airflow 
  # kubernetes_namespace.aws_observability 
  # kubernetes_namespace.cert_manager 
  # kubernetes_namespace.cluster_autoscaler 
  # kubernetes_namespace.external_dns 
  # kubernetes_namespace.external_secrets 
  # kubernetes_namespace.ingress_nginx 
  # kubernetes_namespace.karpenter 
  # kubernetes_namespace.keda 
  # kubernetes_namespace.kyverno 
  # kubernetes_namespace.mwaa 
  # kubernetes_namespace.ui 
  # kubernetes_role.airflow_execution 
  # kubernetes_role.airflow_serviceaccount_management 
  # kubernetes_role.mwaa_execution 
  # kubernetes_role.mwaa_external_secrets 
  # kubernetes_role.mwaa_serviceaccount_management 
  # kubernetes_role_binding.airflow_execution 
  # kubernetes_role_binding.airflow_serviceaccount_management 
  # kubernetes_role_binding.mwaa_execution 
  # kubernetes_role_binding.mwaa_external_secrets 
  # kubernetes_role_binding.mwaa_serviceaccount_management 
  # kubernetes_secret.ui_app_secrets 
  # kubernetes_secret.ui_rds 
  # kubernetes_service_account.mwaa_external_secrets_analytical_platform_data_production 
  # kubernetes_storage_class.gp3 
  # random_password.ui_app_secrets 
  # random_password.ui_rds 
  # module.amazon_prometheus_proxy_iam_policy.aws_iam_policy.policy[0] 
  # module.amazon_prometheus_proxy_iam_role.aws_iam_role.this[0] 
  # module.amazon_prometheus_proxy_iam_role.aws_iam_role_policy_attachment.this["AmazonManagedPrometheusProxy"] 
  # module.analytical_platform_ui_service_role.aws_iam_role.this[0] 
  # module.analytical_platform_ui_service_role.aws_iam_role_policy_attachment.this["lake_formation_cross_account_share"] 
  # module.aws_cloudwatch_metrics_pod_identity.aws_eks_pod_identity_association.this["eks"] 
  # module.aws_cloudwatch_metrics_pod_identity.aws_iam_role.this[0] 
  # module.aws_cloudwatch_metrics_pod_identity.aws_iam_role_policy_attachment.this["CloudWatchAgentServerPolicy"] 
  # module.aws_cloudwatch_network_flow_monitor_iam_role.aws_iam_role.this[0] 
  # module.aws_cloudwatch_network_flow_monitor_iam_role.aws_iam_role_policy_attachment.this["CloudWatchNetworkFlowMonitorAgentPublishPolicy"] 
  # module.aws_for_fluent_bit_iam_role.aws_iam_role.this[0] 
  # module.aws_for_fluent_bit_iam_role.aws_iam_role_policy_attachment.this["CloudWatchAgentServerPolicy"] 
  # module.aws_for_fluent_bit_iam_role.aws_iam_role_policy_attachment.this["EKSClusterLogsKMSAccessPolicy"] 
  # module.cert_manager_iam_role.aws_iam_policy.cert_manager[0] 
  # module.cert_manager_iam_role.aws_iam_role.this[0] 
  # module.cert_manager_iam_role.aws_iam_role_policy_attachment.cert_manager[0] 
  # module.cluster_autoscaler_iam_role.aws_iam_policy.cluster_autoscaler[0] 
  # module.cluster_autoscaler_iam_role.aws_iam_role.this[0] 
  # module.cluster_autoscaler_iam_role.aws_iam_role_policy_attachment.cluster_autoscaler[0] 
  # module.common_secrets_manager_kms.aws_kms_alias.this["secretsmanager/common"] 
  # module.common_secrets_manager_kms.aws_kms_key.this[0] 
  # module.ebs_csi_driver_iam_role.aws_iam_policy.ebs_csi[0] 
  # module.ebs_csi_driver_iam_role.aws_iam_role.this[0] 
  # module.ebs_csi_driver_iam_role.aws_iam_role_policy_attachment.ebs_csi[0] 
  # module.efs_csi_driver_iam_role.aws_iam_policy.efs_csi[0] 
  # module.efs_csi_driver_iam_role.aws_iam_role.this[0] 
  # module.efs_csi_driver_iam_role.aws_iam_role_policy_attachment.efs_csi[0] 
  # module.eks.aws_cloudwatch_log_group.this[0] 
  # module.eks.aws_ec2_tag.cluster_primary_security_group["application"] 
  # module.eks.aws_ec2_tag.cluster_primary_security_group["business-unit"] 
  # module.eks.aws_ec2_tag.cluster_primary_security_group["environment-name"] 
  # module.eks.aws_ec2_tag.cluster_primary_security_group["infrastructure-support"] 
  # module.eks.aws_ec2_tag.cluster_primary_security_group["is-production"] 
  # module.eks.aws_ec2_tag.cluster_primary_security_group["owner"] 
  # module.eks.aws_ec2_tag.cluster_primary_security_group["source-code"] 
  # module.eks.aws_eks_access_entry.this["apc-mwaa"] 
  # module.eks.aws_eks_access_entry.this["data-engineering-airflow"] 
  # module.eks.aws_eks_access_entry.this["gha-mojap-common"] 
  # module.eks.aws_eks_access_entry.this["github-actions-mojas-airflow"] 
  # module.eks.aws_eks_access_entry.this["mpe-administrator"] 
  # module.eks.aws_eks_access_entry.this["sso-administrator"] 
  # module.eks.aws_eks_access_entry.this["sso-platform-engineer-admin"] 
  # module.eks.aws_eks_access_policy_association.this["mpe-administrator_eks-admin"] 
  # module.eks.aws_eks_access_policy_association.this["sso-administrator_eks-admin"] 
  # module.eks.aws_eks_access_policy_association.this["sso-platform-engineer-admin_eks-admin"] 
  # module.eks.aws_eks_addon.this["aws-ebs-csi-driver"] 
  # module.eks.aws_eks_addon.this["aws-efs-csi-driver"] 
  # module.eks.aws_eks_addon.this["aws-guardduty-agent"] 
  # module.eks.aws_eks_addon.this["aws-network-flow-monitoring-agent"] 
  # module.eks.aws_eks_addon.this["coredns"] 
  # module.eks.aws_eks_addon.this["eks-node-monitoring-agent"] 
  # module.eks.aws_eks_addon.this["eks-pod-identity-agent"] 
  # module.eks.aws_eks_addon.this["kube-proxy"] 
  # module.eks.aws_eks_addon.this["vpc-cni"] 
  # module.eks.aws_eks_cluster.this[0] 
  # module.eks.aws_iam_openid_connect_provider.oidc_provider[0] 
  # module.eks.aws_iam_policy.cluster_encryption[0] 
  # module.eks.aws_iam_policy.custom[0] 
  # module.eks.aws_iam_role.this[0] 
  # module.eks.aws_iam_role_policy_attachment.cluster_encryption[0] 
  # module.eks.aws_iam_role_policy_attachment.custom[0] 
  # module.eks.aws_iam_role_policy_attachment.this["AmazonEKSClusterPolicy"] 
  # module.eks.aws_iam_role_policy_attachment.this["AmazonEKSVPCResourceController"] 
  # module.eks.aws_security_group.cluster[0] 
  # module.eks.aws_security_group.node[0] 
  # module.eks.aws_security_group_rule.cluster["ingress_nodes_443"] 
  # module.eks.aws_security_group_rule.cluster["vpc"] 
  # module.eks.aws_security_group_rule.node["egress_all"] 
  # module.eks.aws_security_group_rule.node["ingress_cluster_443"] 
  # module.eks.aws_security_group_rule.node["ingress_cluster_4443_webhook"] 
  # module.eks.aws_security_group_rule.node["ingress_cluster_6443_webhook"] 
  # module.eks.aws_security_group_rule.node["ingress_cluster_8443_webhook"] 
  # module.eks.aws_security_group_rule.node["ingress_cluster_9443_webhook"] 
  # module.eks.aws_security_group_rule.node["ingress_cluster_kubelet"] 
  # module.eks.aws_security_group_rule.node["ingress_nodes_ephemeral"] 
  # module.eks.aws_security_group_rule.node["ingress_self_coredns_tcp"] 
  # module.eks.aws_security_group_rule.node["ingress_self_coredns_udp"] 
  # module.eks.time_sleep.this[0] 
  # module.eks_cluster_logs_kms.aws_kms_alias.this["eks/cluster-logs"] 
  # module.eks_cluster_logs_kms.aws_kms_key.this[0] 
  # module.eks_cluster_logs_kms_access_iam_policy.aws_iam_policy.policy[0] 
  # module.eks_ebs_kms.aws_kms_alias.this["eks/ebs"] 
  # module.eks_ebs_kms.aws_kms_key.this[0] 
  # module.eks_log_group.aws_cloudwatch_log_group.this[0] 
  # module.external_dns_iam_role.aws_iam_policy.external_dns[0] 
  # module.external_dns_iam_role.aws_iam_role.this[0] 
  # module.external_dns_iam_role.aws_iam_role_policy_attachment.external_dns[0] 
  # module.external_secrets_iam_role.aws_iam_policy.external_secrets[0] 
  # module.external_secrets_iam_role.aws_iam_role.this[0] 
  # module.external_secrets_iam_role.aws_iam_role_policy_attachment.external_secrets[0] 
  # module.karpenter.aws_cloudwatch_event_rule.this["health_event"] 
  # module.karpenter.aws_cloudwatch_event_rule.this["instance_rebalance"] 
  # module.karpenter.aws_cloudwatch_event_rule.this["instance_state_change"] 
  # module.karpenter.aws_cloudwatch_event_rule.this["spot_interrupt"] 
  # module.karpenter.aws_cloudwatch_event_target.this["health_event"] 
  # module.karpenter.aws_cloudwatch_event_target.this["instance_rebalance"] 
  # module.karpenter.aws_cloudwatch_event_target.this["instance_state_change"] 
  # module.karpenter.aws_cloudwatch_event_target.this["spot_interrupt"] 
  # module.karpenter.aws_eks_access_entry.node[0] 
  # module.karpenter.aws_eks_pod_identity_association.karpenter[0] 
  # module.karpenter.aws_iam_policy.controller[0] 
  # module.karpenter.aws_iam_role.controller[0] 
  # module.karpenter.aws_iam_role.node[0] 
  # module.karpenter.aws_iam_role_policy_attachment.controller[0] 
  # module.karpenter.aws_iam_role_policy_attachment.controller_additional["KarpenterSQSKMSAccess"] 
  # module.karpenter.aws_iam_role_policy_attachment.node["AmazonEC2ContainerRegistryReadOnly"] 
  # module.karpenter.aws_iam_role_policy_attachment.node["AmazonEKSWorkerNodePolicy"] 
  # module.karpenter.aws_iam_role_policy_attachment.node["AmazonEKS_CNI_Policy"] 
  # module.karpenter.aws_iam_role_policy_attachment.node_additional["AmazonSSMManagedInstanceCore"] 
  # module.karpenter.aws_iam_role_policy_attachment.node_additional["CloudWatchAgentServerPolicy"] 
  # module.karpenter.aws_iam_role_policy_attachment.node_additional["EKSClusterLogsKMSAccessPolicy"] 
  # module.karpenter.aws_sqs_queue.this[0] 
  # module.karpenter.aws_sqs_queue_policy.this[0] 
  # module.karpenter_sqs_kms.aws_kms_alias.this["sqs/karpenter"] 
  # module.karpenter_sqs_kms.aws_kms_key.this[0] 
  # module.karpenter_sqs_kms_access_iam_policy.aws_iam_policy.policy[0] 
  # module.managed_prometheus.aws_prometheus_alert_manager_definition.this[0] 
  # module.managed_prometheus.aws_prometheus_workspace.this[0] 
  # module.managed_prometheus_kms.aws_kms_alias.this["amp/default"] 
  # module.managed_prometheus_kms.aws_kms_key.this[0] 
  # module.managed_prometheus_kms_access_iam_policy.aws_iam_policy.policy[0] 
  # module.managed_prometheus_log_group.aws_cloudwatch_log_group.this[0] 
  # module.managed_prometheus_logs_kms.aws_kms_alias.this["amp/logs"] 
  # module.managed_prometheus_logs_kms.aws_kms_key.this[0] 
  # module.rds_security_group.aws_security_group.this_name_prefix[0] 
  # module.rds_security_group.aws_security_group_rule.ingress_with_cidr_blocks[0] 
  # module.ui_azure_client_secret.aws_secretsmanager_secret.this[0] 
  # module.ui_azure_client_secret.aws_secretsmanager_secret_version.ignore_changes[0] 
  # module.ui_azure_tenant_secret.aws_secretsmanager_secret.this[0] 
  # module.ui_azure_tenant_secret.aws_secretsmanager_secret_version.ignore_changes[0] 
  # module.ui_rds_kms.aws_kms_alias.this["rds/ui"] 
  # module.ui_rds_kms.aws_kms_key.this[0] 
  # module.ui_sentry_dsn_secret.aws_secretsmanager_secret.this[0] 
  # module.ui_sentry_dsn_secret.aws_secretsmanager_secret_version.ignore_changes[0] 
  # module.vpc_cni_iam_role.aws_iam_policy.vpc_cni[0] 
  # module.vpc_cni_iam_role.aws_iam_role.this[0] 
  # module.vpc_cni_iam_role.aws_iam_role_policy_attachment.vpc_cni[0] 
  # module.eks.module.eks_managed_node_group["airflow-high-memory"].aws_eks_node_group.this[0] 
  # module.eks.module.eks_managed_node_group["airflow-high-memory"].aws_iam_role.this[0] 
  # module.eks.module.eks_managed_node_group["airflow-high-memory"].aws_iam_role_policy_attachment.additional["AmazonSSMManagedInstanceCore"] 
  # module.eks.module.eks_managed_node_group["airflow-high-memory"].aws_iam_role_policy_attachment.additional["CloudWatchAgentServerPolicy"] 
  # module.eks.module.eks_managed_node_group["airflow-high-memory"].aws_iam_role_policy_attachment.additional["EKSClusterLogsKMSAccessPolicy"] 
  # module.eks.module.eks_managed_node_group["airflow-high-memory"].aws_iam_role_policy_attachment.this["AmazonEC2ContainerRegistryReadOnly"] 
  # module.eks.module.eks_managed_node_group["airflow-high-memory"].aws_iam_role_policy_attachment.this["AmazonEKSWorkerNodePolicy"] 
  # module.eks.module.eks_managed_node_group["airflow-high-memory"].aws_iam_role_policy_attachment.this["AmazonEKS_CNI_Policy"] 
  # module.eks.module.eks_managed_node_group["airflow-high-memory"].aws_launch_template.this[0] 
  # module.eks.module.eks_managed_node_group["general"].aws_eks_node_group.this[0] 
  # module.eks.module.eks_managed_node_group["general"].aws_iam_role.this[0] 
  # module.eks.module.eks_managed_node_group["general"].aws_iam_role_policy_attachment.additional["AmazonSSMManagedInstanceCore"] 
  # module.eks.module.eks_managed_node_group["general"].aws_iam_role_policy_attachment.additional["CloudWatchAgentServerPolicy"] 
  # module.eks.module.eks_managed_node_group["general"].aws_iam_role_policy_attachment.additional["EKSClusterLogsKMSAccessPolicy"] 
  # module.eks.module.eks_managed_node_group["general"].aws_iam_role_policy_attachment.this["AmazonEC2ContainerRegistryReadOnly"] 
  # module.eks.module.eks_managed_node_group["general"].aws_iam_role_policy_attachment.this["AmazonEKSWorkerNodePolicy"] 
  # module.eks.module.eks_managed_node_group["general"].aws_iam_role_policy_attachment.this["AmazonEKS_CNI_Policy"] 
  # module.eks.module.eks_managed_node_group["general"].aws_launch_template.this[0] 
  # module.eks.module.kms.aws_kms_alias.this["cluster"] 
  # module.eks.module.kms.aws_kms_alias.this["eks/analytical-platform-compute-development"] 
  # module.eks.module.kms.aws_kms_key.this[0] 
  # module.ui_rds.module.db_instance.aws_db_instance.this[0] 
  # module.ui_rds.module.db_instance.aws_iam_role.enhanced_monitoring[0] 
  # module.ui_rds.module.db_instance.aws_iam_role_policy_attachment.enhanced_monitoring[0] 
  # module.ui_rds.module.db_parameter_group.aws_db_parameter_group.this[0] 
  # module.eks.module.eks_managed_node_group["airflow-high-memory"].module.user_data.null_resource.validate_cluster_service_cidr 
  # module.eks.module.eks_managed_node_group["general"].module.user_data.null_resource.validate_cluster_service_cidr 