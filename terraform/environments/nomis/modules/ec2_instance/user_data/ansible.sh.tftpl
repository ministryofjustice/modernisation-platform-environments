#!/bin/bash
set -euo pipefail

export PATH=/usr/local/bin:$PATH

echo "# Retrieving API Token"
token=$(curl -sS -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600")

echo "# Retrieving Instance ID"
instance_id=$(curl -sS -H "X-aws-ec2-metadata-token: $token" -v http://169.254.169.254/latest/meta-data/instance-id)

echo "# Retrieving tag server-type value using aws cli"
server_type=$(aws ec2 describe-tags --filters "Name=resource-id,Values=$instance_id" "Name=key,Values=server-type" --output=text | cut -f5 | sed 's/-/_/g')

if [[ -z $server_type || -z ${ansible_repo} ]]; then
  echo "server-type or ansible_repo not defined, not installing any ansible" >&2
  exit 0
fi

# clone ansible roles and playbook
ansible_dir=$(mktemp -d)
echo "Cloning ${ansible_repo} into $ansible_dir using branch=${branch} if it exists"
cd $ansible_dir
git clone -b ${branch} "https://github.com/ministryofjustice/${ansible_repo}.git" || git clone "https://github.com/ministryofjustice/${ansible_repo}.git"

# set python version
if [[ $(which python3.9) ]]; then
  python=$(which python3.9)
elif [[ $(which python3.6) ]]; then
  python=$(which python3.6)
else
  echo "Python3.9/3.6 not found"
  exit 1
fi
echo "# using python: $python"

# activate virtual environment
mkdir $ansible_dir/python-venv && cd "$_"
$python -m venv ansible
source ansible/bin/activate
$python -m pip install --upgrade pip
if [[ "$python" =~ 3.6 ]]; then
  $python -m pip install wheel
  $python -m pip install cryptography==2.3
  export LC_ALL=en_US.UTF-8
  $python -m pip install ansible-core==2.11.12
else
  $python -m pip install ansible==6.0.0
fi

# install requirements in virtual env
echo "# Installing ansible requirements"
cd $ansible_dir/${ansible_repo}/${ansible_repo_basedir}
$python -m pip install -r requirements.txt
ansible-galaxy role install -r requirements.yml
ansible-galaxy collection install -r requirements.yml

# run ansible
echo "# Execute ansible"
ansible-playbook site.yml \
 --connection=local \
 --inventory localhost \
 --extra-vars "ansible_python_interpreter=$python" \
 --extra-vars "target=localhost" \
 --extra-vars "@group_vars/server_type_$server_type.yml" \
 --tags ec2provision \
 --become

echo "# Cleanup"
deactivate
rm -rf $ansible_dir/python-venv
rm -rf $ansible_dir/ansible-init
rmdir $ansible_dir
