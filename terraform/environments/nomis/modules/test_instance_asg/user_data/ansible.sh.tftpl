#!/bin/bash
set -euo pipefail

export PATH=/usr/local/bin:$PATH
repo="modernisation-platform-ami-builds"
venv=ansible-6.0.0

echo "# Retrieving API Token"
token=$(curl -sS -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600")

echo "# Retrieving Instance ID"
instance_id=$(curl -sS -H "X-aws-ec2-metadata-token: $token" -v http://169.254.169.254/latest/meta-data/instance-id)

echo "# Retrieving tag server-type value using aws cli"
server_type=$(aws ec2 describe-tags --filters "Name=resource-id,Values=$instance_id" "Name=key,Values=server-type" --output=text | cut -f5)

if [[ -z $server_type ]]; then
  echo "server-type not defined, not installing any ansible" >&2
  exit 0
fi

# clone ansible roles and playbook
ansible_dir=$(mktemp -d)
echo "Cloning $repo into $ansible_dir using branch=${branch} if it exists"
cd $ansible_dir
git clone -b ${branch} "https://github.com/ministryofjustice/$repo.git" || git clone "https://github.com/ministryofjustice/$repo.git"

# activate virtual environment
if [[ ! -d /var/lib/venv/$venv ]]; then
  echo "virtual environment '$venv' not found.  Should be in base image"
  exit 1
fi

cd /var/lib/venv
source $venv/bin/activate

echo "# Installing ansible requirements"
cd $ansible_dir/$repo/ansible
python3.9 -m pip install -r requirements.txt
ansible-galaxy role install -r requirements.yml
ansible-galaxy collection install -r requirements.yml

ansible-playbook site.yml \
 --connection=local \
 --inventory localhost \
 --extra-vars "target=localhost" \
 --extra-vars "@group_vars/server_type_$server_type.yml" \
 --become

echo "# Cleanup"
deactivate
rm -rf /tmp/python-venv
rm -rf /tmp/ansible-init

echo "Cleaning up $ansible_dir"
rm -rf $ansible_dir/$repo
rmdir $ansible_dir
