---
schemaVersion: "2.2"
description: "Upload Archive Dumps to S3"
mainSteps:
- action: "aws:runShellScript"
  name: InstallPackages
  inputs:
    runCommand:
    - |
      sudo yum install gcc openssl-devel bzip2-devel libffi-devel zlib-devel wget unzip screen git -y
- name: InstallPython39
  action: "aws:runShellScript"
  inputs:
    runCommand:
      - |
        cd /tmp
        # check if python 3.9 is already installed
        if which python3.9 && which pip3.9; then
          exit 0
        fi
        # install python 3.9
        wget https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tgz
        tar xzf Python-3.9.6.tgz
        rm -f Python-3.9.6.tgz
        cd Python-3.9.6
        ./configure --enable-optimizations
        sudo make altinstall
- name: InstallAndRunAnsible
  action: "aws:runShellScript"
  inputs:
    timeoutSeconds: "14400"
    runCommand:
      - |
        cd /tmp
        # install, create, activate virtual environment
        pip3.9 install virtualenv
        mkdir /tmp/python-venv && cd "$_"
        python3.9 -m venv ansible
        source ansible/bin/activate
        # Install ansible modules in virtual env
        python3.9 -m pip install --upgrade pip
        python3.9 -m pip install ansible==6.0.0
        # Download playbook
        mkdir /tmp/database-ansible-playbook && cd "$_"
        # Install requirements in virtual env
        # Get required extra vars and run ansible
        INSTANCE_ID=$(curl http://instance-data/latest/meta-data/instance-id)
        PY_INTERPRETER=$(which python3.9)
        git clone -b ${branch} --single-branch "https://github.com/ministryofjustice/modernisation-platform-configuration-management.git"
        cd modernisation-platform-configuration-management/ansible
        python3.9 -m pip install -r requirements.txt
        ansible-galaxy role install -r requirements.yml
        ansible-galaxy collection install -r requirements.yml

        ansible-playbook auditupload.yml \
          --connection=local \
          --inventory localhost \
          --extra-vars "audit_upload_bucket=${bucket} ansible_python_interpreter=$PY_INTERPRETER" \
          --become

        # Deactivate virtual env and cleanup
        deactivate
        rm -r /tmp/python-venv
        rm -r /tmp/database-ansible-playbook
        echo "Finished playbook"
