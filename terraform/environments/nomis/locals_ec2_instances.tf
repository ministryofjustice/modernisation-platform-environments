locals {

  ec2_instances = {

    db = {
      config = {
        ami_name                  = "nomis_rhel_7_9_oracledb_11_2_release_2022-10-07T12-48-08.562Z"
        ami_owner                 = "self"
        availability_zone         = "eu-west-2a"
        iam_resource_names_prefix = "ec2-database"
        instance_profile_policies = [
          # "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
          "EC2Db",
          "EC2S3BucketWriteAndDeleteAccessPolicy",
          "ImageBuilderS3BucketWriteAndDeleteAccessPolicy"
        ]
        secretsmanager_secrets_prefix = "ec2/"
        ssm_parameters_prefix         = "ec2/"
        subnet_name                   = "data"
      }
      ebs_volumes = {
        "/dev/sdb" = { label = "app" }   # /u01
        "/dev/sdc" = { label = "app" }   # /u02
        "/dev/sde" = { label = "data" }  # DATA01
        "/dev/sdf" = { label = "data" }  # DATA02
        "/dev/sdg" = { label = "data" }  # DATA03
        "/dev/sdh" = { label = "data" }  # DATA04
        "/dev/sdi" = { label = "data" }  # DATA05
        "/dev/sdj" = { label = "flash" } # FLASH01
        "/dev/sdk" = { label = "flash" } # FLASH02
        "/dev/sds" = { label = "swap" }
      }
      ebs_volume_config = {
        data  = { size = 5 }
        flash = { size = 2 }
      }
      instance = {
        disable_api_termination      = false
        instance_type                = "r6i.xlarge"
        key_name                     = "ec2-user"
        metadata_options_http_tokens = "optional" # the Oracle installer cannot accommodate a token
        monitoring                   = true
        vpc_security_group_ids       = ["data-db"]
        tags = {
          backup-plan = "daily-and-weekly"
        }
      }
      route53_records = {
        create_internal_record = true
        create_external_record = true
      }
      secretsmanager_secrets = {
        asm-passwords = {
          description             = "Oracle ASM passwords generated by oracle-11g ansible role"
          recovery_window_in_days = 0 # so instances can be deleted and re-created without issue
        }
      }
      user_data_cloud_init = {
        args = {
          lifecycle_hook_name  = "ready-hook"
          branch               = "main"
          ansible_repo         = "modernisation-platform-configuration-management"
          ansible_repo_basedir = "ansible"
          ansible_args         = "--tags ec2provision"
        }
        scripts = [
          "ansible-ec2provision.sh.tftpl",
          "post-ec2provision.sh.tftpl"
        ]
      }
      tags = {
        ami                         = "nomis_rhel_7_9_oracledb_11_2"
        backup                      = "false" # disable mod platform backup since we use our own policies
        component                   = "data"
        instance-access-policy      = "limited"
        licence-requirements        = "Oracle Database"
        OracleDbLTS-ManagedInstance = true # oracle license tracking
        os-major-version            = 7
        os-type                     = "Linux"
        os-version                  = "RHEL 7.9"
        "Patch Group"               = "RHEL"
        server-type                 = "nomis-db"
      }
    }

    db19c = {
      config = {
        ami_name                  = "hmpps_ol_8_5_oracledb_19c_release_2024-06-07T07-59-47.056Z"
        ami_owner                 = "self"
        availability_zone         = "eu-west-2a"
        iam_resource_names_prefix = "ec2-database"
        instance_profile_policies = [
          # "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
          "EC2Db",
          "EC2S3BucketWriteAndDeleteAccessPolicy",
          "ImageBuilderS3BucketWriteAndDeleteAccessPolicy"
        ]
        secretsmanager_secrets_prefix = "ec2/"
        ssm_parameters_prefix         = "ec2/"
        subnet_name                   = "data"
      }
      ebs_volumes = {
        "/dev/sdb" = { label = "app" }   # /u01
        "/dev/sdc" = { label = "app" }   # /u02
        "/dev/sde" = { label = "data" }  # DATA01
        "/dev/sdf" = { label = "data" }  # DATA02
        "/dev/sdg" = { label = "data" }  # DATA03
        "/dev/sdh" = { label = "data" }  # DATA04
        "/dev/sdi" = { label = "data" }  # DATA05
        "/dev/sdj" = { label = "flash" } # FLASH01
        "/dev/sdk" = { label = "flash" } # FLASH02
        "/dev/sds" = { label = "swap" }
      }
      ebs_volume_config = {
        data  = { size = 5 }
        flash = { size = 2 }
      }
      instance = {
        disable_api_termination      = false
        instance_type                = "r6i.xlarge"
        key_name                     = "ec2-user"
        metadata_options_http_tokens = "optional" # the Oracle installer cannot accommodate a token
        monitoring                   = true
        vpc_security_group_ids       = ["data-db"]
        tags = {
          backup-plan = "daily-and-weekly"
        }
      }
      route53_records = {
        create_internal_record = true
        create_external_record = true
      }
      secretsmanager_secrets = {
        asm-passwords = {
          description             = "Oracle ASM passwords generated by oracle-19c ansible role"
          recovery_window_in_days = 0 # so instances can be deleted and re-created without issue
        }
      }
      user_data_cloud_init = {
        args = {
          lifecycle_hook_name  = "ready-hook"
          branch               = "main"
          ansible_repo         = "modernisation-platform-configuration-management"
          ansible_repo_basedir = "ansible"
          ansible_args         = "--tags ec2provision"
        }
        scripts = [
          "ansible-ec2provision.sh.tftpl",
          "post-ec2provision.sh.tftpl"
        ]
      }
      tags = {
        ami                         = "hmpps_ol_8_5_oracledb_19c"
        backup                      = "false" # disable mod platform backup since we use our own policies
        component                   = "data"
        instance-access-policy      = "limited"
        licence-requirements        = "Oracle Database"
        OracleDbLTS-ManagedInstance = true # oracle license tracking
        os-major-version            = 8
        os-type                     = "Linux"
        os-version                  = "OL 8.5"
        server-type                 = "nomis-db19c"
      }
    }

    xtag = {
      config = {
        ami_name                  = "nomis_rhel_7_9_weblogic_xtag_10_3_release_2023-07-19T09-01-29.168Z"
        availability_zone         = "eu-west-2a"
        iam_resource_names_prefix = "ec2-instance"
        instance_profile_policies = [
          # "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
          "EC2Default",
          "EC2S3BucketWriteAndDeleteAccessPolicy",
          "ImageBuilderS3BucketWriteAndDeleteAccessPolicy"
        ]
        secretsmanager_secrets_prefix = "ec2/"
        ssm_parameters_prefix         = "ec2/"
        subnet_name                   = "private"
      }
      instance = {
        disable_api_termination      = false
        instance_type                = "t2.large"
        key_name                     = "ec2-user"
        metadata_options_http_tokens = "required"
        monitoring                   = false
        vpc_security_group_ids       = ["private-web"]
      }
      user_data_cloud_init = {
        args = {
          lifecycle_hook_name  = "ready-hook"
          branch               = "main"
          ansible_repo         = "modernisation-platform-configuration-management"
          ansible_repo_basedir = "ansible"
          ansible_args         = "--tags ec2provision"
        }
        scripts = [
          "install-ssm-agent.sh.tftpl",
          "ansible-ec2provision.sh.tftpl",
          "post-ec2provision.sh.tftpl"
        ]
      }
      tags = {
        ami                    = "nomis_rhel_7_9_weblogic_xtag_10_3"
        description            = "nomis XTAG weblogic component"
        instance-access-policy = "limited"
        os-type                = "Linux"
        server-type            = "nomis-xtag"
      }
    }
  }
}
