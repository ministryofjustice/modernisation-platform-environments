# This is an EC2Launch V2 type user-data script
# https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2launch-v2-settings.html#ec2launch-v2-task-configuration
# See C:\ProgramData\Amazon\EC2Launch\log for logs
version: 1.0
tasks:
  - task: executeScript
    inputs:
      - frequency: once
        type: powershell
        runAs: admin
        #not actually a secret
        #checkov:skip=CKV_SECRET_6: "Base64 High Entropy String"
        content: |
          Set-TimeZone "GMT Standard Time"
          Set-WinSystemLocale "en-GB"

          # Scheduled job to add new users - jobs can be found under Task Scheduler -> Powershell -> ScheduledJobs
          $add_users = '
            $secret_prefix = "${SECRET_PREFIX}/" # from Terraform templating

            $secrets = Get-SECSecretList -Filter @{Key="name";Values=$secret_prefix}

            foreach($secret in $secrets){
                $username = $secret.Name.SubString($secret_prefix.Length) # secrets are stored like /Jumpserver/Users/JoeBloggs, so trim prefix
                $user_exists = Get-LocalUser $username -ErrorAction SilentlyContinue

                # get password from secret manager
                $secret = Get-SECSecretValue -SecretId $secret.ARN -Select SecretString
                $password = ConvertTo-SecureString -String $secret -AsPlainText -Force

                if ($user_exists -eq $null) {
                    # Create user and add to RD group
                    New-LocalUser $username -Password $password -FullName $username
                    Add-LocalGroupMember -Group "Remote Desktop Users" -Member $username
                    Add-LocalGroupMember -Group "Administrators" -Member $username
                } else {
                    Set-LocalUser -Name $username -Password $password
                }
            }
          '

          # add_user script is written to file and added as a recurring job
          $path = "C:\Users\Administrator\Documents\add_users.ps1"
          Out-File -FilePath $path -InputObject $add_users
          Register-ScheduledJob -Name "add_users" -FilePath $path -RunEvery $(New-TimeSpan -Minutes 15) -RunNow

          # Install AWS PowerShell modules dependencies
          Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force
          Install-Module -Name AWS.Tools.Installer -Force -AllowClobber
          Install-AWSToolsModule -Name AWS.Tools.SimpleSystemsManagement -Force -Cleanup -AllowClobber

          $ConfigFilePath = "C:\Program Files\Amazon\AmazonCloudWatchAgent\amazon-cloudwatch-config.json"

          function Get-AmazonCloudWatchAgentConfig {
            param(
              [string]$OutFilePath
            )
            (Get-SSMParameter -Name "cloud-watch-config-windows").Value | Out-File -FilePath $OutFilePath -Force -NoNewline  
          }

          function Start-AmazonCloudWatchAgent {
            param(
              [string]$ConfigurationFilePath
            )
            "C:\Program Files\Amazon\AmazonCloudWatchAgent\amazon-cloudwatch-agent-ctl.ps1 -a fetch-config -m ec2 -s -c file:$ConfigurationFilePath"
          }

          # Check CWAgent is installed, if it isn't then install it
          $cwagent = Get-Service -Name "AmazonCloudWatchAgent" -ErrorAction SilentlyContinue
          if ($cwagent) {
            Write-Output "CloudWatch Agent is already installed"
            Get-AmazonCloudWatchAgentConfig -OutFilePath $ConfigFilePath
            Start-AmazonCloudWatchAgent -ConfigurationFilePath $ConfigFilePath
          } else {
            Write-Output "Installing CloudWatch Agent"
            Invoke-WebRequest -Uri "https://s3.amazonaws.com/amazoncloudwatch-agent/windows/amd64/latest/amazon-cloudwatch-agent.msi" -OutFile "C:\Program Files\Amazon\AmazonCloudWatchAgent\amazon-cloudwatch-agent.msi"
            $cwagent_installer = "C:\Program Files\Amazon\AmazonCloudWatchAgent\amazon-cloudwatch-agent.msi"
            Start-Process -FilePath msiexec.exe -ArgumentList "/i $cwagent_installer /qn" -Wait
            Get-AmazonCloudWatchAgentConfig -OutFilePath $ConfigFilePath
            Start-AmazonCloudWatchAgent -ConfigurationFilePath $ConfigFilePath
          }
