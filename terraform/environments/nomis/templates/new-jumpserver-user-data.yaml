# This is an EC2Launch V2 type user-data script
# https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2launch-v2-settings.html#ec2launch-v2-task-configuration
# See C:\ProgramData\Amazon\EC2Launch\log for logs
version: 1.0
tasks:
  - task: executeScript
    inputs:
      - frequency: once
        type: powershell
        runAs: admin
        #not actually a secret
        #checkov:skip=CKV_SECRET_6: "Base64 High Entropy String"
        content: |
          # FIXME: This step currently doesn't work as the ssm:cloud-watch-config-windows document doesn't exist
          # It's probably been removed ages ago but since this step was set to 'silently continue' no-one has noticed...
      
          $ErrorActionPreference = "Stop" # set all errors to terminate script

          Set-TimeZone "GMT Standard Time"
          Set-WinSystemLocale "en-GB"

          # Check CWAgent is installed, if it isn't then install it
          # $timeout = New-TimeSpan -Seconds 600
          # $endTime = (Get-Date).Add($timeout)
          # $cwagent = Get-Service -Name "AmazonCloudWatchAgent"
          # if ($cwagent) {
          #   Do {
          #   & "C:\Program Files\Amazon\AmazonCloudWatchAgent\amazon-cloudwatch-agent-ctl.ps1" -a fetch-config -m ec2 -s -c ssm:cloud-watch-config-windows
          #   } Until ((Get-Service -Name "AmazonCloudWatchAgent" | Where-Object {$_.Status -eq "Running"}) -or ((Get-Date) -gt $endTime))
          # } else {
          #   Invoke-WebRequest -Uri "https://s3.amazonaws.com/amazoncloudwatch-agent/windows/amd64/latest/amazon-cloudwatch-agent.msi" -OutFile "C:\Program Files\Amazon\AmazonCloudWatchAgent\amazon-cloudwatch-agent.msi"
          #   $cwagent_installer = "C:\Program Files\Amazon\AmazonCloudWatchAgent\amazon-cloudwatch-agent.msi"
          #   Start-Process -FilePath msiexec.exe -ArgumentList "/i $cwagent_installer /qn" -Wait
          #   Do {
          #   & "C:\Program Files\Amazon\AmazonCloudWatchAgent\amazon-cloudwatch-agent-ctl.ps1" -a fetch-config -m ec2 -s -c ssm:cloud-watch-config-windows
          #   } Until ((Get-Service -Name "AmazonCloudWatchAgent" | Where-Object {$_.Status -eq "Running"}) -or ((Get-Date) -gt $endTime))
          # }
  - task: executeScript
    inputs:
      - frequency: once
        type: powershell
        runAs: admin
        content: |
          $ErrorActionPreference = "Stop" # set all errors to terminate script

          $S3_BUCKET = "ec2-image-builder-nomis20220314103938567000000001"

          # Download Java exe from S3 Bucket
          Read-S3Object -BucketName $S3_BUCKET -Key jumpserver-software/jre-6u33-windows-i586.exe -File C:\jumpserver-software\jre-6u33-windows-i586.exe

          # Install Java
          Start-Process -Wait -Verbose -FilePath "C:\jumpserver-software\jre-6u33-windows-i586.exe" -ArgumentList "/s", "/L C:\jumpserver-software\jre-install.log"

          # Set JAVA_HOME environment variable
          [System.Environment]::SetEnvironmentVariable("JAVA_HOME", "C:\Program Files (x86)\Java\jre6", [System.EnvironmentVariableTarget]::Machine)

          # Add Java to PATH environment variable
          [System.Environment]::SetEnvironmentVariable("Path", $env:Path + ";%JAVA_HOME%\bin", [System.EnvironmentVariableTarget]::Machine)

          # Copy deployment config files
          $deployment_folder = "C:\Windows\Sun\Java\Deployment"
          New-Item -Path $deployment_folder -ItemType Directory -Force
          Read-S3Object -BucketName $S3_BUCKET -Key jumpserver-software/deployment.config -File $deployment_folder\deployment.config
          Read-S3Object -BucketName $S3_BUCKET -Key jumpserver-software/deployment.properties -File $deployment_folder\deployment.properties
          Read-S3Object -BucketName $S3_BUCKET -Key jumpserver-software/trusted.certs -File $deployment_folder\trusted.certs

          # Prevent Java update check
          # Remove-ItemProperty -Path "HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Run" -Name SunJavaUpdateSched -Force 

          # TODO: Add new section with check java -version and fail if not on path