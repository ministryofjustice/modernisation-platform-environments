# This is an EC2Launch V2 type user-data script
# https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2launch-v2-settings.html#ec2launch-v2-task-configuration
# See C:\ProgramData\Amazon\EC2Launch\log for logs
# See C:\Windows\System32\config\systemprofile\AppData\Local\Temp\EC2Launch* for script output
version: 1.0 # version 1.0 is required as this executes AFTER the SSM Agent is running
tasks:
  - task: executeScript
    inputs:
      - frequency: once
        type: powershell
        runAs: admin
        content: |-
          # Install git - should be in AMI but install if missing
          $ErrorActionPreference = "Stop"
          if (-not (Get-Command "git" -ErrorAction SilentlyContinue)) {
            choco install git.install -y
          }
      - frequency: once
        type: powershell
        runAs: admin
        content: |-
          # Install awscli - should be in AMI but install if missing
          $ErrorActionPreference = "Stop"
          if (-not (Get-Command "aws" -ErrorAction SilentlyContinue)) {
            choco install awscli -y
          }
      - frequency: once
        type: powershell
        runAs: admin
        content: |-
          # Wait for instance role to be attached. EC2 must have permissions to access tags
          $N = 12
          1..$N | foreach {
            $Tags = aws ec2 describe-tags
            if ($Tags) {
              break
            } else {
              Write-Output "[$_/$N] Waiting for instance role: aws ec2 describe-tags"
              Start-Sleep -Seconds 10
            }
          }
      - frequency: once
        type: powershell
        runAs: admin
        content: |-
          # Start and wait for SSM Agent
          $ErrorActionPreference = "Stop"
          $N = 12
          1..$N | foreach {
            $AmazonSSMAgent = Get-Service -Name "AmazonSSMAgent" -ErrorAction SilentlyContinue
            if (-not $AmazonSSMAgent) {
              Start-Service -Name "AmazonSSMAgent" -Force
            } elseif ($AmazonSSMAgent.Status -ne "Running") {
              Write-Output "[$_/$N] Waiting for AmazonSSMAgent status: $AmazonSSMAgentStatus"
              Start-Sleep -Seconds 10
            } else {
              break
            }
          }
      - frequency: once
        type: powershell
        runAs: admin
        content: |-
          # Run appropriate UserData powershell from modernisation-platform-configuration-management repo
          $ErrorActionPreference = "Stop"
          Set-Location -Path ([System.IO.Path]::GetTempPath())
          $GitBranch = "DSOS-2601/powershell-fixes-for-win2012"
          $Script = "Invoke-UserDataScript.ps1"
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12 # since powershell 4 uses Tls1 as default
          Invoke-WebRequest "https://raw.githubusercontent.com/ministryofjustice/modernisation-platform-configuration-management/${GitBranch}/powershell/Scripts/Run-GitScript.ps1" -OutFile "Run-GitScript.ps1"
          . ./Run-GitScript.ps1 $Script -GitBranch $GitBranch
