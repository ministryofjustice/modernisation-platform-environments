locals {
  rds_user           = jsondecode(data.aws_secretsmanager_secret_version.data_rds_secret_current.secret_string)["username"]
  rds_port           = "1433"
  rds_password       = jsondecode(data.aws_secretsmanager_secret_version.data_rds_secret_current.secret_string)["password"]
  source_db_url      = jsondecode(data.aws_secretsmanager_secret_version.source_db_secret_current.secret_string)["host"]
  source_db_user     = jsondecode(data.aws_secretsmanager_secret_version.source_db_secret_current.secret_string)["username"]
  source_db_password = jsondecode(data.aws_secretsmanager_secret_version.source_db_secret_current.secret_string)["password"]
  waf_arn            = aws_wafv2_web_acl.tribunals_web_acl.arn
}

module "appeals" {
  is_ftp_app = false
  source     = "./modules/tribunal"
  # The app_name needs to match the folder name in the volume
  app_name                     = "appeals"
  app_url                      = "administrativeappeals"
  module_name                  = "appeals"
  sql_migration_path           = "../scripts/administrative_appeals"
  app_db_name                  = "ossc"
  app_db_login_name            = "ossc-app"
  app_source_db_name           = "Ossc"
  app_rds_url                  = aws_db_instance.rdsdb.address
  app_rds_user                 = local.rds_user
  app_rds_port                 = local.rds_port
  app_rds_password             = local.rds_password
  app_source_db_url            = local.source_db_url
  app_source_db_user           = local.source_db_user
  app_source_db_password       = local.source_db_password
  app_load_balancer            = aws_lb.tribunals_lb
  environment                  = local.environment
  application_data             = local.application_data.accounts[local.environment]
  tags                         = local.tags
  dms_instance_arn             = aws_dms_replication_instance.tribunals_replication_instance.replication_instance_arn
  task_definition_volume       = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity      = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity      = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold    = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold    = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                    = local.application_data.accounts[local.environment].app_count
  server_port                  = local.application_data.accounts[local.environment].server_port_1
  cluster_id                   = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                 = aws_ecs_cluster.tribunals_cluster.name
  vpc_shared_id                = data.aws_vpc.shared.id
  subnets_shared_public_ids    = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external = aws_acm_certificate.external
  documents_location           = "JudgmentFiles"
  waf_arn                      = local.waf_arn
  target_group_attachment_port = var.services["appeals"].port
  target_group_arns            = local.target_group_arns
  target_group_arns_sftp       = local.target_group_arns_sftp
  new_db_password              = random_password.app_new_password.result
}

module "ahmlr" {
  is_ftp_app                   = false
  source                       = "./modules/tribunal"
  app_name                     = "hmlands"
  app_url                      = "landregistrationdivision"
  module_name                  = "ahmlr"
  sql_migration_path           = "../scripts/ahmlr"
  app_db_name                  = "hmlands"
  app_db_login_name            = "hmlands-app"
  app_source_db_name           = "hmlands"
  app_rds_url                  = aws_db_instance.rdsdb.address
  app_rds_user                 = local.rds_user
  app_rds_port                 = local.rds_port
  app_rds_password             = local.rds_password
  app_source_db_url            = local.source_db_url
  app_source_db_user           = local.source_db_user
  app_source_db_password       = local.source_db_password
  app_load_balancer            = aws_lb.tribunals_lb
  environment                  = local.environment
  application_data             = local.application_data.accounts[local.environment]
  tags                         = local.tags
  dms_instance_arn             = aws_dms_replication_instance.tribunals_replication_instance.replication_instance_arn
  task_definition_volume       = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity      = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity      = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold    = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold    = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                    = local.application_data.accounts[local.environment].app_count
  server_port                  = local.application_data.accounts[local.environment].server_port_1
  cluster_id                   = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                 = aws_ecs_cluster.tribunals_cluster.name
  vpc_shared_id                = data.aws_vpc.shared.id
  subnets_shared_public_ids    = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external = aws_acm_certificate.external
  documents_location           = "Judgments"
  waf_arn                      = local.waf_arn
  target_group_attachment_port = var.services["ahmlr"].port
  target_group_arns            = local.target_group_arns
  target_group_arns_sftp       = local.target_group_arns_sftp
  new_db_password              = random_password.app_new_password.result
}

module "care_standards" {
  is_ftp_app                   = false
  source                       = "./modules/tribunal"
  app_name                     = "care-standards"
  module_name                  = "care_standards"
  app_url                      = "carestandards"
  sql_migration_path           = "../scripts/care_standards"
  app_db_name                  = "carestandards"
  app_db_login_name            = "carestandards-app"
  app_source_db_name           = "carestandards"
  app_rds_url                  = aws_db_instance.rdsdb.address
  app_rds_user                 = local.rds_user
  app_rds_port                 = local.rds_port
  app_rds_password             = local.rds_password
  app_source_db_url            = local.source_db_url
  app_source_db_user           = local.source_db_user
  app_source_db_password       = local.source_db_password
  app_load_balancer            = aws_lb.tribunals_lb
  environment                  = local.environment
  application_data             = local.application_data.accounts[local.environment]
  tags                         = local.tags
  dms_instance_arn             = aws_dms_replication_instance.tribunals_replication_instance.replication_instance_arn
  task_definition_volume       = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity      = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity      = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold    = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold    = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                    = local.application_data.accounts[local.environment].app_count
  server_port                  = local.application_data.accounts[local.environment].server_port_1
  cluster_id                   = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                 = aws_ecs_cluster.tribunals_cluster.name
  vpc_shared_id                = data.aws_vpc.shared.id
  subnets_shared_public_ids    = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external = aws_acm_certificate.external
  documents_location           = "Judgments"
  waf_arn                      = local.waf_arn
  target_group_attachment_port = var.services["care_standards"].port
  target_group_arns            = local.target_group_arns
  target_group_arns_sftp       = local.target_group_arns_sftp
  new_db_password              = random_password.app_new_password.result
}

module "cicap" {
  is_ftp_app                   = false
  source                       = "./modules/tribunal"
  app_name                     = "cicap"
  app_url                      = "cicap"
  module_name                  = "cicap"
  sql_migration_path           = "../scripts/cicap"
  app_db_name                  = "cicap"
  app_db_login_name            = "cicap-app"
  app_source_db_name           = "cicap"
  app_rds_url                  = aws_db_instance.rdsdb.address
  app_rds_user                 = local.rds_user
  app_rds_port                 = local.rds_port
  app_rds_password             = local.rds_password
  app_load_balancer            = aws_lb.tribunals_lb
  app_source_db_url            = local.source_db_url
  app_source_db_user           = local.source_db_user
  app_source_db_password       = local.source_db_password
  environment                  = local.environment
  application_data             = local.application_data.accounts[local.environment]
  tags                         = local.tags
  dms_instance_arn             = aws_dms_replication_instance.tribunals_replication_instance.replication_instance_arn
  task_definition_volume       = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity      = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity      = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold    = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold    = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                    = local.application_data.accounts[local.environment].app_count
  server_port                  = local.application_data.accounts[local.environment].server_port_1
  cluster_id                   = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                 = aws_ecs_cluster.tribunals_cluster.name
  vpc_shared_id                = data.aws_vpc.shared.id
  subnets_shared_public_ids    = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external = aws_acm_certificate.external
  documents_location           = "CaseFiles"
  waf_arn                      = local.waf_arn
  target_group_attachment_port = var.services["cicap"].port
  target_group_arns            = local.target_group_arns
  target_group_arns_sftp       = local.target_group_arns_sftp
  new_db_password              = random_password.app_new_password.result
}

module "employment_appeals" {
  is_ftp_app                   = false
  source                       = "./modules/tribunal"
  app_name                     = "employment-appeals"
  app_url                      = "employmentappeals"
  module_name                  = "employment_appeals"
  sql_migration_path           = "../scripts/employment_appeals"
  app_db_name                  = "eat"
  app_db_login_name            = "eat-app"
  app_source_db_name           = "eat"
  app_rds_url                  = aws_db_instance.rdsdb.address
  app_rds_user                 = local.rds_user
  app_rds_port                 = local.rds_port
  app_rds_password             = local.rds_password
  app_load_balancer            = aws_lb.tribunals_lb
  app_source_db_url            = local.source_db_url
  app_source_db_user           = local.source_db_user
  app_source_db_password       = local.source_db_password
  environment                  = local.environment
  application_data             = local.application_data.accounts[local.environment]
  tags                         = local.tags
  dms_instance_arn             = aws_dms_replication_instance.tribunals_replication_instance.replication_instance_arn
  task_definition_volume       = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity      = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity      = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold    = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold    = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                    = local.application_data.accounts[local.environment].app_count
  server_port                  = local.application_data.accounts[local.environment].server_port_1
  cluster_id                   = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                 = aws_ecs_cluster.tribunals_cluster.name
  vpc_shared_id                = data.aws_vpc.shared.id
  subnets_shared_public_ids    = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external = aws_acm_certificate.external
  documents_location           = "Public/Upload"
  waf_arn                      = local.waf_arn
  target_group_attachment_port = var.services["employment_appeals"].port
  target_group_arns            = local.target_group_arns
  target_group_arns_sftp       = local.target_group_arns_sftp
  new_db_password              = random_password.app_new_password.result
}

module "finance_and_tax" {
  is_ftp_app                   = false
  source                       = "./modules/tribunal"
  app_name                     = "finance-and-tax"
  app_url                      = "financeandtax"
  module_name                  = "finance_and_tax"
  sql_migration_path           = "../scripts/finance_and_tax"
  app_db_name                  = "ftt"
  app_db_login_name            = "ftt-app"
  app_source_db_name           = "ftt"
  app_rds_url                  = aws_db_instance.rdsdb.address
  app_rds_user                 = local.rds_user
  app_rds_port                 = local.rds_port
  app_rds_password             = local.rds_password
  app_load_balancer            = aws_lb.tribunals_lb
  app_source_db_url            = local.source_db_url
  app_source_db_user           = local.source_db_user
  app_source_db_password       = local.source_db_password
  environment                  = local.environment
  application_data             = local.application_data.accounts[local.environment]
  tags                         = local.tags
  dms_instance_arn             = aws_dms_replication_instance.tribunals_replication_instance.replication_instance_arn
  task_definition_volume       = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity      = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity      = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold    = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold    = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                    = local.application_data.accounts[local.environment].app_count
  server_port                  = local.application_data.accounts[local.environment].server_port_1
  cluster_id                   = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                 = aws_ecs_cluster.tribunals_cluster.name
  vpc_shared_id                = data.aws_vpc.shared.id
  subnets_shared_public_ids    = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external = aws_acm_certificate.external
  documents_location           = "JudgmentFiles"
  waf_arn                      = local.waf_arn
  target_group_attachment_port = var.services["finance_and_tax"].port
  target_group_arns            = local.target_group_arns
  target_group_arns_sftp       = local.target_group_arns_sftp
  new_db_password              = random_password.app_new_password.result
}

module "immigration_services" {
  is_ftp_app                   = false
  source                       = "./modules/tribunal"
  app_name                     = "immigration-services"
  app_url                      = "immigrationservices"
  module_name                  = "immigration_services"
  sql_migration_path           = "../scripts/immigration_services"
  app_db_name                  = "imset"
  app_db_login_name            = "imset-app"
  app_source_db_name           = "imset"
  app_rds_url                  = aws_db_instance.rdsdb.address
  app_rds_user                 = local.rds_user
  app_rds_port                 = local.rds_port
  app_rds_password             = local.rds_password
  app_load_balancer            = aws_lb.tribunals_lb
  app_source_db_url            = local.source_db_url
  app_source_db_user           = local.source_db_user
  app_source_db_password       = local.source_db_password
  environment                  = local.environment
  application_data             = local.application_data.accounts[local.environment]
  tags                         = local.tags
  dms_instance_arn             = aws_dms_replication_instance.tribunals_replication_instance.replication_instance_arn
  task_definition_volume       = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity      = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity      = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold    = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold    = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                    = local.application_data.accounts[local.environment].app_count
  server_port                  = local.application_data.accounts[local.environment].server_port_1
  cluster_id                   = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                 = aws_ecs_cluster.tribunals_cluster.name
  vpc_shared_id                = data.aws_vpc.shared.id
  subnets_shared_public_ids    = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external = aws_acm_certificate.external
  documents_location           = "JudgmentFiles"
  waf_arn                      = local.waf_arn
  target_group_attachment_port = var.services["immigration_services"].port
  target_group_arns            = local.target_group_arns
  target_group_arns_sftp       = local.target_group_arns_sftp
  new_db_password              = random_password.app_new_password.result
}

module "information_tribunal" {
  is_ftp_app                   = false
  source                       = "./modules/tribunal"
  app_name                     = "information-tribunal"
  app_url                      = "informationrights"
  module_name                  = "information_tribunal"
  sql_migration_path           = "../scripts/information_tribunal"
  app_db_name                  = "it"
  app_db_login_name            = "it-app"
  app_source_db_name           = "it"
  app_rds_url                  = aws_db_instance.rdsdb.address
  app_rds_user                 = local.rds_user
  app_rds_port                 = local.rds_port
  app_rds_password             = local.rds_password
  app_load_balancer            = aws_lb.tribunals_lb
  app_source_db_url            = local.source_db_url
  app_source_db_user           = local.source_db_user
  app_source_db_password       = local.source_db_password
  environment                  = local.environment
  application_data             = local.application_data.accounts[local.environment]
  tags                         = local.tags
  dms_instance_arn             = aws_dms_replication_instance.tribunals_replication_instance.replication_instance_arn
  task_definition_volume       = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity      = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity      = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold    = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold    = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                    = local.application_data.accounts[local.environment].app_count
  server_port                  = local.application_data.accounts[local.environment].server_port_1
  cluster_id                   = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                 = aws_ecs_cluster.tribunals_cluster.name
  vpc_shared_id                = data.aws_vpc.shared.id
  subnets_shared_public_ids    = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external = aws_acm_certificate.external
  documents_location           = "DBFiles"
  waf_arn                      = local.waf_arn
  target_group_attachment_port = var.services["information_tribunal"].port
  target_group_arns            = local.target_group_arns
  target_group_arns_sftp       = local.target_group_arns_sftp
  new_db_password              = random_password.app_new_password.result
}

module "lands_tribunal" {
  is_ftp_app                   = false
  source                       = "./modules/tribunal"
  app_name                     = "lands-chamber"
  app_url                      = "landschamber"
  module_name                  = "lands_tribunal"
  sql_migration_path           = "../scripts/lands_chamber"
  app_db_name                  = "lands"
  app_db_login_name            = "lands-app"
  app_source_db_name           = "lands"
  app_rds_url                  = aws_db_instance.rdsdb.address
  app_rds_user                 = local.rds_user
  app_rds_port                 = local.rds_port
  app_rds_password             = local.rds_password
  app_load_balancer            = aws_lb.tribunals_lb
  app_source_db_url            = local.source_db_url
  app_source_db_user           = local.source_db_user
  app_source_db_password       = local.source_db_password
  environment                  = local.environment
  application_data             = local.application_data.accounts[local.environment]
  tags                         = local.tags
  dms_instance_arn             = aws_dms_replication_instance.tribunals_replication_instance.replication_instance_arn
  task_definition_volume       = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity      = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity      = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold    = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold    = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                    = local.application_data.accounts[local.environment].app_count
  server_port                  = local.application_data.accounts[local.environment].server_port_1
  cluster_id                   = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                 = aws_ecs_cluster.tribunals_cluster.name
  vpc_shared_id                = data.aws_vpc.shared.id
  subnets_shared_public_ids    = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external = aws_acm_certificate.external
  documents_location           = "JudgmentFiles"
  waf_arn                      = local.waf_arn
  target_group_attachment_port = var.services["lands_tribunal"].port
  target_group_arns            = local.target_group_arns
  target_group_arns_sftp       = local.target_group_arns_sftp
  new_db_password              = random_password.app_new_password.result
}

module "transport" {
  is_ftp_app                   = false
  source                       = "./modules/tribunal"
  app_name                     = "transport"
  app_url                      = "transportappeals"
  module_name                  = "transport"
  sql_migration_path           = "../scripts/transport"
  app_db_name                  = "transport"
  app_db_login_name            = "transport-app"
  app_source_db_name           = "Transport"
  app_rds_url                  = aws_db_instance.rdsdb.address
  app_rds_user                 = local.rds_user
  app_rds_port                 = local.rds_port
  app_rds_password             = local.rds_password
  app_load_balancer            = aws_lb.tribunals_lb
  app_source_db_url            = local.source_db_url
  app_source_db_user           = local.source_db_user
  app_source_db_password       = local.source_db_password
  environment                  = local.environment
  application_data             = local.application_data.accounts[local.environment]
  tags                         = local.tags
  dms_instance_arn             = aws_dms_replication_instance.tribunals_replication_instance.replication_instance_arn
  task_definition_volume       = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity      = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity      = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold    = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold    = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                    = local.application_data.accounts[local.environment].app_count
  server_port                  = local.application_data.accounts[local.environment].server_port_1
  cluster_id                   = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                 = aws_ecs_cluster.tribunals_cluster.name
  vpc_shared_id                = data.aws_vpc.shared.id
  subnets_shared_public_ids    = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external = aws_acm_certificate.external
  documents_location           = "JudgmentFiles"
  waf_arn                      = local.waf_arn
  target_group_attachment_port = var.services["transport"].port
  target_group_arns            = local.target_group_arns
  target_group_arns_sftp       = local.target_group_arns_sftp
  new_db_password              = random_password.app_new_password.result
}

module "charity_tribunal_decisions" {
  is_ftp_app                        = true
  source                            = "./modules/tribunal_ftp"
  app_name                          = "ftp-charity-tribunals"
  app_url                           = "charitytribunal"
  module_name                       = "charity_tribunal_decisions"
  environment                       = local.environment
  application_data                  = local.application_data.accounts[local.environment]
  tags                              = local.tags
  task_definition_volume            = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity           = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity           = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold         = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold         = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                         = local.application_data.accounts[local.environment].app_count
  server_port                       = local.application_data.accounts[local.environment].server_port_1
  cluster_id                        = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                      = aws_ecs_cluster.tribunals_cluster.name
  vpc_shared_id                     = data.aws_vpc.shared.id
  subnets_shared_public_ids         = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external      = aws_acm_certificate.external
  documents_location                = "documents"
  waf_arn                           = local.waf_arn
  target_group_attachment_port      = var.services["charity_tribunal_decisions"].port
  target_group_attachment_port_sftp = var.sftp_services["charity_tribunal_decisions"].sftp_port
  app_load_balancer                 = aws_lb.tribunals_lb
  target_group_arns                 = local.target_group_arns
  target_group_arns_sftp            = local.target_group_arns_sftp
}

module "claims_management_decisions" {
  is_ftp_app                        = true
  source                            = "./modules/tribunal_ftp"
  app_name                          = "ftp-claims-management"
  app_url                           = "claimsmanagement"
  module_name                       = "claims_management_decisions"
  environment                       = local.environment
  application_data                  = local.application_data.accounts[local.environment]
  tags                              = local.tags
  task_definition_volume            = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity           = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity           = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold         = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold         = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                         = local.application_data.accounts[local.environment].app_count
  server_port                       = local.application_data.accounts[local.environment].server_port_1
  cluster_id                        = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                      = aws_ecs_cluster.tribunals_cluster.name
  vpc_shared_id                     = data.aws_vpc.shared.id
  subnets_shared_public_ids         = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external      = aws_acm_certificate.external
  documents_location                = "Documents"
  waf_arn                           = local.waf_arn
  target_group_attachment_port      = var.services["claims_management_decisions"].port
  target_group_attachment_port_sftp = var.sftp_services["claims_management_decisions"].sftp_port
  app_load_balancer                 = aws_lb.tribunals_lb
  target_group_arns                 = local.target_group_arns
  target_group_arns_sftp            = local.target_group_arns_sftp
}

module "consumer_credit_appeals" {
  is_ftp_app                        = true
  source                            = "./modules/tribunal_ftp"
  app_name                          = "ftp-consumer-credit"
  app_url                           = "consumercreditappeals"
  module_name                       = "consumer_credit_appeals"
  environment                       = local.environment
  application_data                  = local.application_data.accounts[local.environment]
  tags                              = local.tags
  task_definition_volume            = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity           = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity           = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold         = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold         = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                         = local.application_data.accounts[local.environment].app_count
  server_port                       = local.application_data.accounts[local.environment].server_port_1
  cluster_id                        = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                      = aws_ecs_cluster.tribunals_cluster.name
  vpc_shared_id                     = data.aws_vpc.shared.id
  subnets_shared_public_ids         = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external      = aws_acm_certificate.external
  documents_location                = "Documents"
  waf_arn                           = local.waf_arn
  target_group_attachment_port      = var.services["consumer_credit_appeals"].port
  target_group_attachment_port_sftp = var.sftp_services["consumer_credit_appeals"].sftp_port
  app_load_balancer                 = aws_lb.tribunals_lb
  target_group_arns                 = local.target_group_arns
  target_group_arns_sftp            = local.target_group_arns_sftp
}

module "estate_agent_appeals" {
  is_ftp_app                        = true
  source                            = "./modules/tribunal_ftp"
  app_name                          = "ftp-estate-agents"
  app_url                           = "estateagentappeals"
  module_name                       = "estate_agent_appeals"
  environment                       = local.environment
  application_data                  = local.application_data.accounts[local.environment]
  tags                              = local.tags
  task_definition_volume            = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity           = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity           = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold         = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold         = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                         = local.application_data.accounts[local.environment].app_count
  server_port                       = local.application_data.accounts[local.environment].server_port_1
  cluster_id                        = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                      = aws_ecs_cluster.tribunals_cluster.name
  vpc_shared_id                     = data.aws_vpc.shared.id
  subnets_shared_public_ids         = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external      = aws_acm_certificate.external
  documents_location                = "Documents"
  waf_arn                           = local.waf_arn
  target_group_attachment_port      = var.services["estate_agent_appeals"].port
  target_group_attachment_port_sftp = var.sftp_services["estate_agent_appeals"].sftp_port
  app_load_balancer                 = aws_lb.tribunals_lb
  target_group_arns                 = local.target_group_arns
  target_group_arns_sftp            = local.target_group_arns_sftp
}

module "primary_health_lists" {
  is_ftp_app                        = true
  source                            = "./modules/tribunal_ftp"
  app_name                          = "ftp-primary-health"
  app_url                           = "primaryhealthlists"
  module_name                       = "primary_health_lists"
  environment                       = local.environment
  application_data                  = local.application_data.accounts[local.environment]
  tags                              = local.tags
  task_definition_volume            = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity           = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity           = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold         = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold         = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                         = local.application_data.accounts[local.environment].app_count
  server_port                       = local.application_data.accounts[local.environment].server_port_1
  cluster_id                        = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                      = aws_ecs_cluster.tribunals_cluster.name
  vpc_shared_id                     = data.aws_vpc.shared.id
  subnets_shared_public_ids         = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external      = aws_acm_certificate.external
  documents_location                = "Documents"
  waf_arn                           = local.waf_arn
  target_group_attachment_port      = var.services["primary_health_lists"].port
  target_group_attachment_port_sftp = var.sftp_services["primary_health_lists"].sftp_port
  app_load_balancer                 = aws_lb.tribunals_lb
  target_group_arns                 = local.target_group_arns
  target_group_arns_sftp            = local.target_group_arns_sftp
}

module "siac" {
  is_ftp_app                        = true
  source                            = "./modules/tribunal_ftp"
  app_name                          = "ftp-siac"
  app_url                           = "siac"
  module_name                       = "siac"
  environment                       = local.environment
  application_data                  = local.application_data.accounts[local.environment]
  tags                              = local.tags
  task_definition_volume            = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity           = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity           = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold         = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold         = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                         = local.application_data.accounts[local.environment].app_count
  server_port                       = local.application_data.accounts[local.environment].server_port_1
  cluster_id                        = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                      = aws_ecs_cluster.tribunals_cluster.name
  vpc_shared_id                     = data.aws_vpc.shared.id
  subnets_shared_public_ids         = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external      = aws_acm_certificate.external
  documents_location                = "Documents"
  waf_arn                           = local.waf_arn
  target_group_attachment_port      = var.services["siac"].port
  target_group_attachment_port_sftp = var.sftp_services["siac"].sftp_port
  app_load_balancer                 = aws_lb.tribunals_lb
  target_group_arns                 = local.target_group_arns
  target_group_arns_sftp            = local.target_group_arns_sftp
}

module "sscs_venue_pages" {
  is_ftp_app                        = true
  source                            = "./modules/tribunal_ftp"
  app_name                          = "ftp-sscs-venues"
  app_url                           = "sscsvenues"
  module_name                       = "sscs_venue_pages"
  environment                       = local.environment
  application_data                  = local.application_data.accounts[local.environment]
  tags                              = local.tags
  task_definition_volume            = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity           = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity           = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold         = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold         = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                         = local.application_data.accounts[local.environment].app_count
  server_port                       = local.application_data.accounts[local.environment].server_port_1
  cluster_id                        = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                      = aws_ecs_cluster.tribunals_cluster.name
  vpc_shared_id                     = data.aws_vpc.shared.id
  subnets_shared_public_ids         = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external      = aws_acm_certificate.external
  documents_location                = "Documents"
  waf_arn                           = local.waf_arn
  target_group_attachment_port      = var.services["sscs_venue_pages"].port
  target_group_attachment_port_sftp = var.sftp_services["sscs_venue_pages"].sftp_port
  app_load_balancer                 = aws_lb.tribunals_lb
  target_group_arns                 = local.target_group_arns
  target_group_arns_sftp            = local.target_group_arns_sftp
}

module "tax_chancery_decisions" {
  is_ftp_app                        = true
  source                            = "./modules/tribunal_ftp"
  app_name                          = "ftp-tax-chancery"
  app_url                           = "taxchancerydecisions"
  module_name                       = "tax_chancery_decisions"
  environment                       = local.environment
  application_data                  = local.application_data.accounts[local.environment]
  tags                              = local.tags
  task_definition_volume            = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity           = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity           = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold         = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold         = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                         = local.application_data.accounts[local.environment].app_count
  server_port                       = local.application_data.accounts[local.environment].server_port_1
  cluster_id                        = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                      = aws_ecs_cluster.tribunals_cluster.name
  vpc_shared_id                     = data.aws_vpc.shared.id
  subnets_shared_public_ids         = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external      = aws_acm_certificate.external
  documents_location                = "Documents"
  waf_arn                           = local.waf_arn
  target_group_attachment_port      = var.services["tax_chancery_decisions"].port
  target_group_attachment_port_sftp = var.sftp_services["tax_chancery_decisions"].sftp_port
  app_load_balancer                 = aws_lb.tribunals_lb
  target_group_arns                 = local.target_group_arns
  target_group_arns_sftp            = local.target_group_arns_sftp
}

module "tax_tribunal_decisions" {
  is_ftp_app                        = true
  source                            = "./modules/tribunal_ftp"
  app_name                          = "ftp-tax-tribunal"
  app_url                           = "taxtribunaldecisions"
  module_name                       = "tax_tribunal_decisions"
  environment                       = local.environment
  application_data                  = local.application_data.accounts[local.environment]
  tags                              = local.tags
  task_definition_volume            = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity           = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity           = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold         = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold         = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                         = local.application_data.accounts[local.environment].app_count
  server_port                       = local.application_data.accounts[local.environment].server_port_1
  cluster_id                        = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                      = aws_ecs_cluster.tribunals_cluster.name
  vpc_shared_id                     = data.aws_vpc.shared.id
  subnets_shared_public_ids         = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external      = aws_acm_certificate.external
  documents_location                = "Documents"
  waf_arn                           = local.waf_arn
  target_group_attachment_port      = var.services["tax_tribunal_decisions"].port
  target_group_attachment_port_sftp = var.sftp_services["tax_tribunal_decisions"].sftp_port
  app_load_balancer                 = aws_lb.tribunals_lb
  target_group_arns                 = local.target_group_arns
  target_group_arns_sftp            = local.target_group_arns_sftp
}

module "ftp_admin_appeals" {
  is_ftp_app                        = true
  source                            = "./modules/tribunal_ftp"
  app_name                          = "ftp-admin-appeals"
  app_url                           = "adminappealsreports"
  module_name                       = "ftp_admin_appeals"
  environment                       = local.environment
  application_data                  = local.application_data.accounts[local.environment]
  tags                              = local.tags
  task_definition_volume            = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity           = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity           = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold         = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold         = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                         = local.application_data.accounts[local.environment].app_count
  server_port                       = local.application_data.accounts[local.environment].server_port_1
  cluster_id                        = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                      = aws_ecs_cluster.tribunals_cluster.name
  vpc_shared_id                     = data.aws_vpc.shared.id
  subnets_shared_public_ids         = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external      = aws_acm_certificate.external
  documents_location                = "Documents"
  waf_arn                           = local.waf_arn
  target_group_attachment_port      = var.services["ftp_admin_appeals"].port
  target_group_attachment_port_sftp = var.sftp_services["ftp_admin_appeals"].sftp_port
  app_load_balancer                 = aws_lb.tribunals_lb
  target_group_arns                 = local.target_group_arns
  target_group_arns_sftp            = local.target_group_arns_sftp
}
