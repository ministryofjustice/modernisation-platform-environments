locals {
  rds_url                      = "${aws_db_instance.rdsdb.address}"
  rds_user                     = jsondecode(data.aws_secretsmanager_secret_version.data_rds_secret_current.secret_string)["username"]
  rds_port                     = "1433"
  rds_password                 = jsondecode(data.aws_secretsmanager_secret_version.data_rds_secret_current.secret_string)["password"]
  source_db_url                = jsondecode(data.aws_secretsmanager_secret_version.source_db_secret_current.secret_string)["host"]
  source_db_user               = jsondecode(data.aws_secretsmanager_secret_version.source_db_secret_current.secret_string)["username"]
  source_db_password           = jsondecode(data.aws_secretsmanager_secret_version.source_db_secret_current.secret_string)["password"]
}

module "appeals" {
  source                            = "./modules/tribunal"
  app_name                          = "appeals"
  app_url                           = "administrativeappeals"
  sql_migration_path                = "../scripts/administrative_appeals"
  app_db_name                       = "ossc"
  app_db_login_name                 = "ossc-app"
  app_source_db_name                = "Ossc"
  app_rds_url                       = local.rds_url
  app_rds_user                      = local.rds_user
  app_rds_port                      = local.rds_port
  app_rds_password                  = local.rds_password
  app_source_db_url                 = local.source_db_url
  app_source_db_user                = local.source_db_user
  app_source_db_password            = local.source_db_password
  environment                       = local.environment
  application_data                  = local.application_data.accounts[local.environment]
  tags                              = local.tags
  dms_instance_arn                  = aws_dms_replication_instance.tribunals_replication_instance.replication_instance_arn
  task_definition_volume            = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity           = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity           = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold         = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold         = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                         = local.application_data.accounts[local.environment].app_count 
  server_port                       = local.application_data.accounts[local.environment].server_port_1
  cluster_id                        = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                      = aws_ecs_cluster.tribunals_cluster.name
  vpc_shared_id                     = data.aws_vpc.shared.id 
  subnets_shared_public_ids         = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external      = aws_acm_certificate.external
}

module "ahmlr" {
  depends_on                        = [ module.appeals ]
  source                            = "./modules/tribunal"
  app_name                          = "hmlands"
  app_url                           = "hmlands"
  sql_migration_path                = "../scripts/ahmlr"
  app_db_name                       = "hmlands"
  app_db_login_name                 = "hmlands-app"
  app_source_db_name                = "hmlands"
  app_rds_url                       = local.rds_url
  app_rds_user                      = local.rds_user
  app_rds_port                      = local.rds_port
  app_rds_password                  = local.rds_password
  app_source_db_url                 = local.source_db_url
  app_source_db_user                = local.source_db_user
  app_source_db_password            = local.source_db_password
  environment                       = local.environment
  application_data                  = local.application_data.accounts[local.environment]
  tags                              = local.tags
  dms_instance_arn                  = aws_dms_replication_instance.tribunals_replication_instance.replication_instance_arn
  task_definition_volume            = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity           = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity           = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold         = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold         = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                         = local.application_data.accounts[local.environment].app_count
  server_port                       = local.application_data.accounts[local.environment].server_port_1
  cluster_id                        = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                      = aws_ecs_cluster.tribunals_cluster.name
  vpc_shared_id                     = data.aws_vpc.shared.id
  subnets_shared_public_ids         = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external      = aws_acm_certificate.external
}

module "care_standards" {
  depends_on                        = [ module.ahmlr ]
  source                            = "./modules/tribunal"
  app_name                          = "care-standards"
  app_url                           = "carestandards"
  sql_migration_path                = "../scripts/care_standards"
  app_db_name                       = "carestandards"
  app_db_login_name                 = "carestandards-app"
  app_source_db_name                = "carestandards"
  app_rds_url                       = local.rds_url
  app_rds_user                      = local.rds_user
  app_rds_port                      = local.rds_port
  app_rds_password                  = local.rds_password
  app_source_db_url                 = local.source_db_url
  app_source_db_user                = local.source_db_user
  app_source_db_password            = local.source_db_password
  environment                       = local.environment
  application_data                  = local.application_data.accounts[local.environment]
  tags                              = local.tags
  dms_instance_arn                  = aws_dms_replication_instance.tribunals_replication_instance.replication_instance_arn
  task_definition_volume            = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity           = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity           = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold         = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold         = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                         = local.application_data.accounts[local.environment].app_count
  server_port                       = local.application_data.accounts[local.environment].server_port_1
  cluster_id                        = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                      = aws_ecs_cluster.tribunals_cluster.name
  vpc_shared_id                     = data.aws_vpc.shared.id
  subnets_shared_public_ids         = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external      = aws_acm_certificate.external
}

module "cicap" {
  depends_on                        = [ module.care_standards ]
  source                            = "./modules/tribunal"
  app_name                          = "cicap"
  app_url                           = "cicap"
  sql_migration_path                = "../scripts/cicap"
  app_db_name                       = "cicap"
  app_db_login_name                 = "cicap-app"
  app_source_db_name                = "cicap"
  app_rds_url                       = local.rds_url
  app_rds_user                      = local.rds_user
  app_rds_port                      = local.rds_port
  app_rds_password                  = local.rds_password
  app_source_db_url                 = local.source_db_url
  app_source_db_user                = local.source_db_user
  app_source_db_password            = local.source_db_password
  environment                       = local.environment
  application_data                  = local.application_data.accounts[local.environment]
  tags                              = local.tags
  dms_instance_arn                  = aws_dms_replication_instance.tribunals_replication_instance.replication_instance_arn
  task_definition_volume            = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity           = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity           = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold         = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold         = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                         = local.application_data.accounts[local.environment].app_count
  server_port                       = local.application_data.accounts[local.environment].server_port_1
  cluster_id                        = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                      = aws_ecs_cluster.tribunals_cluster.name
  vpc_shared_id                     = data.aws_vpc.shared.id
  subnets_shared_public_ids         = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external      = aws_acm_certificate.external
}

module "employment_appeals" {
  depends_on                        = [ module.cicap ]
  source                            = "./modules/tribunal"
  app_name                          = "employment-appeals"
  app_url                           = "employmentappeals"
  sql_migration_path                = "../scripts/employment_appeals"
  app_db_name                       = "eat"
  app_db_login_name                 = "eat-app"
  app_source_db_name                = "eat"
  app_rds_url                       = local.rds_url
  app_rds_user                      = local.rds_user
  app_rds_port                      = local.rds_port
  app_rds_password                  = local.rds_password
  app_source_db_url                 = local.source_db_url
  app_source_db_user                = local.source_db_user
  app_source_db_password            = local.source_db_password
  environment                       = local.environment
  application_data                  = local.application_data.accounts[local.environment]
  tags                              = local.tags
  dms_instance_arn                  = aws_dms_replication_instance.tribunals_replication_instance.replication_instance_arn
  task_definition_volume            = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity           = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity           = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold         = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold         = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                         = local.application_data.accounts[local.environment].app_count
  server_port                       = local.application_data.accounts[local.environment].server_port_1
  cluster_id                        = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                      = aws_ecs_cluster.tribunals_cluster.name
  vpc_shared_id                     = data.aws_vpc.shared.id
  subnets_shared_public_ids         = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external      = aws_acm_certificate.external
}

module "finance_and_tax" {
  source                            = "./modules/tribunal"
  app_name                          = "finance-and-tax"
  app_url                           = "finance-and-tax"
  sql_migration_path                = "../scripts/finance_and_tax"
  app_db_name                       = "ftt"
  app_db_login_name                 = "ftt-app"
  app_source_db_name                = "ftt"
  app_rds_url                       = local.rds_url
  app_rds_user                      = local.rds_user
  app_rds_port                      = local.rds_port
  app_rds_password                  = local.rds_password
  app_source_db_url                 = local.source_db_url
  app_source_db_user                = local.source_db_user
  app_source_db_password            = local.source_db_password
  environment                       = local.environment
  application_data                  = local.application_data.accounts[local.environment]
  tags                              = local.tags
  dms_instance_arn                  = aws_dms_replication_instance.tribunals_replication_instance.replication_instance_arn
  task_definition_volume            = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity           = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity           = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold         = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold         = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                         = local.application_data.accounts[local.environment].app_count
  server_port                       = local.application_data.accounts[local.environment].server_port_1
  cluster_id                        = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                      = aws_ecs_cluster.tribunals_cluster.name
  vpc_shared_id                     = data.aws_vpc.shared.id
  subnets_shared_public_ids         = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external      = aws_acm_certificate.external
}

module "immigration_services" {
  source                            = "./modules/tribunal"
  app_name                          = "immigration-services"
  app_url                           = "immigration-services"
  sql_migration_path                = "../scripts/immigration_services"
  app_db_name                       = "imset"
  app_db_login_name                 = "imset-app"
  app_source_db_name                = "imset"
  app_rds_url                       = local.rds_url
  app_rds_user                      = local.rds_user
  app_rds_port                      = local.rds_port
  app_rds_password                  = local.rds_password
  app_source_db_url                 = local.source_db_url
  app_source_db_user                = local.source_db_user
  app_source_db_password            = local.source_db_password
  environment                       = local.environment
  application_data                  = local.application_data.accounts[local.environment]
  tags                              = local.tags
  dms_instance_arn                  = aws_dms_replication_instance.tribunals_replication_instance.replication_instance_arn
  task_definition_volume            = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity           = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity           = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold         = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold         = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                         = local.application_data.accounts[local.environment].app_count
  server_port                       = local.application_data.accounts[local.environment].server_port_1
  cluster_id                        = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                      = aws_ecs_cluster.tribunals_cluster.name
  vpc_shared_id                     = data.aws_vpc.shared.id
  subnets_shared_public_ids         = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external      = aws_acm_certificate.external
}

module "information_tribunal" {
  source                            = "./modules/tribunal"
  app_name                          = "information-tribunal"
  app_url                           = "information-tribunal"
  sql_migration_path                = "../scripts/information_tribunal"
  app_db_name                       = "it"
  app_db_login_name                 = "it-app"
  app_source_db_name                = "it"
  app_rds_url                       = local.rds_url
  app_rds_user                      = local.rds_user
  app_rds_port                      = local.rds_port
  app_rds_password                  = local.rds_password
  app_source_db_url                 = local.source_db_url
  app_source_db_user                = local.source_db_user
  app_source_db_password            = local.source_db_password
  environment                       = local.environment
  application_data                  = local.application_data.accounts[local.environment]
  tags                              = local.tags
  dms_instance_arn                  = aws_dms_replication_instance.tribunals_replication_instance.replication_instance_arn
  task_definition_volume            = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity           = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity           = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold         = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold         = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                         = local.application_data.accounts[local.environment].app_count
  server_port                       = local.application_data.accounts[local.environment].server_port_1
  cluster_id                        = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                      = aws_ecs_cluster.tribunals_cluster.name
  vpc_shared_id                     = data.aws_vpc.shared.id
  subnets_shared_public_ids         = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external      = aws_acm_certificate.external
}

module "lands_tribunal" {
  source                            = "./modules/tribunal"
  app_name                          = "lands-chamber"
  app_url                           = "lands-chamber"
  sql_migration_path                = "../scripts/lands_chamber"
  app_db_name                       = "lands"
  app_db_login_name                 = "lands-app"
  app_source_db_name                = "lands"
  app_rds_url                       = local.rds_url
  app_rds_user                      = local.rds_user
  app_rds_port                      = local.rds_port
  app_rds_password                  = local.rds_password
  app_source_db_url                 = local.source_db_url
  app_source_db_user                = local.source_db_user
  app_source_db_password            = local.source_db_password
  environment                       = local.environment
  application_data                  = local.application_data.accounts[local.environment]
  tags                              = local.tags
  dms_instance_arn                  = aws_dms_replication_instance.tribunals_replication_instance.replication_instance_arn
  task_definition_volume            = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity           = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity           = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold         = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold         = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                         = local.application_data.accounts[local.environment].app_count
  server_port                       = local.application_data.accounts[local.environment].server_port_1
  cluster_id                        = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                      = aws_ecs_cluster.tribunals_cluster.name
  vpc_shared_id                     = data.aws_vpc.shared.id
  subnets_shared_public_ids         = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external      = aws_acm_certificate.external
}

module "transport" {
  source                            = "./modules/tribunal"
  app_name                          = "transport"
  app_url                           = "transportappeals"
  sql_migration_path                = "../scripts/transport"
  app_db_name                       = "transport"
  app_db_login_name                 = "transport-app"
  app_source_db_name                = "Transport"
  app_rds_url                       = local.rds_url
  app_rds_user                      = local.rds_user
  app_rds_port                      = local.rds_port
  app_rds_password                  = local.rds_password
  app_source_db_url                 = local.source_db_url
  app_source_db_user                = local.source_db_user
  app_source_db_password            = local.source_db_password
  environment                       = local.environment
  application_data                  = local.application_data.accounts[local.environment]
  tags                              = local.tags
  dms_instance_arn                  = aws_dms_replication_instance.tribunals_replication_instance.replication_instance_arn  
  task_definition_volume            = local.application_data.accounts[local.environment].task_definition_volume
  appscaling_min_capacity           = local.application_data.accounts[local.environment].appscaling_min_capacity
  appscaling_max_capacity           = local.application_data.accounts[local.environment].appscaling_max_capacity
  ecs_scaling_cpu_threshold         = local.application_data.accounts[local.environment].ecs_scaling_cpu_threshold
  ecs_scaling_mem_threshold         = local.application_data.accounts[local.environment].ecs_scaling_mem_threshold
  app_count                         = local.application_data.accounts[local.environment].app_count  
  server_port                       = local.application_data.accounts[local.environment].server_port_1
  cluster_id                        = aws_ecs_cluster.tribunals_cluster.id
  cluster_name                      = aws_ecs_cluster.tribunals_cluster.name 
  vpc_shared_id                     = data.aws_vpc.shared.id 
  subnets_shared_public_ids         = data.aws_subnets.shared-public.ids
  aws_acm_certificate_external      = aws_acm_certificate.external
}