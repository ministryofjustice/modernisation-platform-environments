---
schemaVersion: "2.2"
description: SSM Document for installing choco git and aws cli on windows servers using powershell
parameters:
mainSteps:
  - name: Install or Upgrade Chocolatey
    action: aws:runPowerShellScript
    precondition:
      StringEquals:
        - platformType
        - Windows
    inputs:
      runCommand:
        - |
          # Install or upgrade chocolatey
          $ErrorActionPreference = "Stop"
          if (Get-Command choco.exe -ErrorAction SilentlyContinue) {
            $version=choco --version
            if ($version -lt "2.2.2") {
              Write-Output "Upgrading old version of chocolatey $version to 2.2.2"
              choco upgrade chocolatey --version 2.2.2 -y
            } else {
              Write-Output "Chocolatey already installed version $version"
            }
          } else {
            Write-Output "Installing Chocolatey"
            Set-ExecutionPolicy Bypass -Scope Process -Force
            [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
            Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
          }
  - name: Install Git
    action: aws:runPowerShellScript
    precondition:
      StringEquals:
        - platformType
        - Windows
    inputs:
      runCommand:
        - |
          # Install git - it should be in AMI but install if missing
          $ErrorActionPreference = "Stop"
          if (Get-Command "git" -ErrorAction SilentlyContinue) {
            Write-Output "git already installed, skipping choco install"
          } else {
            Write-Output "choco upgrade chocolatey-compatibility.extension -y"
            choco upgrade chocolatey-compatibility.extension -y
            Write-Output "choco upgrade chocolatey-core.extension -y"
            choco upgrade chocolatey-core.extension -y
            Write-Output "choco install git.install -y"
            choco install git.install -y
          }
  - name: Install Git Fallback
    action: aws:runPowerShellScript
    precondition:
      StringEquals:
        - platformType
        - Windows
    inputs:
      runCommand:
        - |
          # Fallback installation for git
          $ErrorActionPreference = "Stop"
          if (Get-Command "git" -ErrorAction SilentlyContinue) {
            Write-Output "git already installed, skipping fallback install"
          } else {
            Set-Location -Path ([System.IO.Path]::GetTempPath())
            Url="https://github.com/git-for-windows/git/releases/download/v2.44.0.windows.1/Git-2.44.0-64-bit.exe"
            Write-Output "Fallback installation for git - downloading from $Url"
            Invoke-WebRequest $Url -OutFile ".\Git.exe"
            .\Git.exe /VERYSILENT /NORESTART
          }
  - name: Install AWS CLI
    action: aws:runPowerShellScript
    precondition:
      StringEquals:
        - platformType
        - Windows
    inputs:
      runCommand:
        - |
          # Install awscli
          $ErrorActionPreference = "Stop"
          if (Get-Command "aws" -ErrorAction SilentlyContinue) {
            Write-Output "awscli already installed"
          } else {
            Write-Output "choco install awscli -y"
            choco install awscli -y
          }
