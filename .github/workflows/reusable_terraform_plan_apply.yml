---
name: terraform plan apply

on:
  workflow_call:
    inputs:
      application:
        type: string
        required: true
        description: "Name of the application, e.g. nomis"
      environment:
        type: string
        required: true
        description: "Name of the environment, e.g. development"
      action:
        type: string
        required: false
        description: "Set to plan, plan_apply or apply"
        default: plan
      additional_tfargs:
        type: string
        required: false
        description: "Any additional terraform arguments to be passed in to terraform plan/apply, e.g. -var 'foo=bar'"
        default: ""
      do_state_refresh:
        type: boolean
        required: false
        description: "Set to true to do a state refresh prior to the plan"
        default: false
      post_plan_to_pr:
        type: boolean
        required: false
        description: "Set to true to post terraform plan as a comment to the PR"
        default: false
    secrets:
      modernisation_platform_environments:
        required: true
      pipeline_github_token:
        required: true

env:
  ACCOUNT_NAME: "${{ inputs.application }}-${{ inputs.environment }}"
  WORKSPACE_NAME: "${{ inputs.application }}-${{ inputs.environment }}"
  ENVIRONMENT_MANAGEMENT: "${{ secrets.modernisation_platform_environments }}"
  GITHUB_TOKEN: "${{ secrets.pipeline_github_token }}"

jobs:

  # jobs are shown in alphabetical order in re-usable workflows, hence the job[n] prefix
  job1_plan:
    name: plan
    if: inputs.action == 'plan' || inputs.action == 'plan_apply'
    runs-on: ubuntu-latest
    outputs:
      plan_exitcode: steps.plan.exitcode
    steps:
      - name: Debug
        run: |
          echo "application=${{ inputs.application }} environment=${{ inputs.environment }} action=${{ inputs.action }}"
          echo "additional_tfargs=${{ inputs.additional_tfargs }} do_state_refresh=${{ inputs.do_state_refresh }} post_plan_to_pr=${{ inputs.post_plan_to_pr }}"

      - name: Checkout Repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c  # v3.3.0

      - name: Get AWS Account Number
        run: |
          ACCOUNT_NUMBER=$(jq -r -e --arg account_name "${ACCOUNT_NAME}" '.account_ids[$account_name]' <<< $ENVIRONMENT_MANAGEMENT)
          echo "ACCOUNT_NUMBER=${ACCOUNT_NUMBER}" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838  # v1.7.0
        with:
          role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_NUMBER }}:role/github-actions"
          role-session-name: githubactionsrolesession
          aws-region: "eu-west-2"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1  # v2.0.3
        with:
          terraform_version: "~1"
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: "terraform/environments/${{ inputs.application }}"
        run: |
          terraform --version
          terraform init -input=false -lock-timeout=300s

      - name: Terraform Workspace Select
        working-directory: "terraform/environments/${{ inputs.application }}"
        run: |
          terraform workspace select "${WORKSPACE_NAME}"

      - name: Terraform State Refresh
        if: inputs.do_state_refresh == true
        working-directory: "terraform/environments/${{ inputs.application }}"
        run: |
          terraform apply -refresh-only -auto-approve {{ inputs.additional_tfargs }} | bash ${GITHUB_WORKSPACE}/scripts/redact-output.sh

      - name: Terraform Plan
        id: plan
        env:
          POST_PLAN_TO_PR: "${{ github.event_name == 'pull_request' && steps.plan.outputs.exitcode == '2' && inputs.post_plan_to_pr == true }}"
        working-directory: "terraform/environments/${{ inputs.application }}"
        run: |
          set -o pipefail
          exitcode=0
          tf_args="-detailed-exitcode ${{ inputs.additional_tfargs }}"
          [[ ${POST_PLAN_TO_PR} == 'true' ]] && tf_args="${tg_args} -no-color"
          echo "terraform plan ${tf_args}"
          terraform plan ${tf_args} | bash ${GITHUB_WORKSPACE}/scripts/redact-output.sh | tee tfplan.txt || exitcode=$?
          echo "exitcode=${exitcode}" >> $GITHUB_OUTPUT
          (( exitcode == 1 )) && exit 1 || exit 0

      - name: Create Plan PR message
        if: github.event_name == 'pull_request' && steps.plan.outputs.exitcode == '2' && inputs.post_plan_to_pr == true
        working-directory: "terraform/environments/${{ inputs.application }}"
        run: |
          comment() {
            url="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            len=$(cat tfplan.txt | wc -c)
            echo '**`${{ env.WORKSPACE_NAME }}`** terragrunt plan on `${{ github.event_name }}` event [#${{ github.run_number }}]'(${url})
            echo
            echo '```'
            head -c 65476 tfplan.txt
            echo
            echo '```'
            if [[ $len -gt 65476 ]]; then
              echo "** Truncated output.  See $url for the rest **"
            fi
          }
          echo 'TF_PLAN_OUT<<EOF' >> $GITHUB_ENV
          comment >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Post Plan to PR
        if: github.event_name == 'pull_request' && steps.plan.outputs.exitcode == '2' && inputs.post_plan_to_pr == true
        env:
          message: "${{ env.TF_PLAN_OUT }}"
        run: |
          escaped_message=$(echo "$message" | jq -Rsa .)
          curl -sS -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments" \
            -d '{"body":'"${escaped_message}"'}'


  job2_apply:
    name: apply
    needs: job1_plan
    if: (inputs.action == 'plan_apply' || inputs.action == 'apply') && needs.plan.outputs.plan_exitcode == '2' 
    runs-on: ubuntu-latest
    environment: "${{ inputs.application }}-${{ inputs.environment }}"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c  # v3.3.0
