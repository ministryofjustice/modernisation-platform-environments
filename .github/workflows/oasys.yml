---
name: oasys
on:
  push:
    branches:
      - main
    paths:
      - 'terraform/environments/oasys/**'
      - '.github/workflows/oasys.yml'
  pull_request:
    branches:
      - main
    types: [opened, edited, reopened, synchronize]
    paths:
      - 'terraform/environments/oasys/**'
      - '.github/workflows/oasys.yml'
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.DSO_GITHUB_AUTOMATION_PAT }}
  TF_IN_AUTOMATION: true
  TF_VAR_BRANCH_NAME: ${{ github.event_name == 'pull_request' && 'main' || (github.head_ref || github.ref_name) }}
  TF_VAR_GH_ACTOR_NAME: ${{ github.actor}}
  AWS_REGION: "eu-west-2"
  ENVIRONMENT_MANAGEMENT: ${{ secrets.MODERNISATION_PLATFORM_ENVIRONMENTS }}
  TERRAGRUNT_VERSION: v0.36.1
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout
defaults:
  run:
    shell: bash

jobs:
  # Plan + deploy for development and test enironments, never from main
  plan-dev-test:
    strategy:
      matrix:
        include:
          - environment: test
          - environment: development
    name: Terragrunt plan - ${{ github.workflow }} - ${{ matrix.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
      - name: Set Account Number
        run: echo "ACCOUNT_NUMBER=$(jq -r -e --arg account_name "${GITHUB_WORKFLOW}-${TF_ENV}" '.account_ids[$account_name]' <<< $ENVIRONMENT_MANAGEMENT)" >> $GITHUB_ENV
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838 # v1.7.0
        with:
          role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_NUMBER }}:role/github-actions"
          role-session-name: githubactionsrolesession
          aws-region: ${{ env.AWS_REGION }}
      - name: Load and Configure Terraform
        uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1 # v2.0.3
        with:
          terraform_version: "~1"
          terraform_wrapper: false
      - name: Setup Terragrunt
        run: |
          wget -O /usr/local/bin/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/${TERRAGRUNT_VERSION}/terragrunt_linux_amd64
          chmod u+x /usr/local/bin/terragrunt
      - name: Init
        working-directory: "${{ env.TEAM_DIR }}/${{ matrix.project }}"
        run: |
          terragrunt init
          terragrunt workspace select "${ENV}-${TF_ENV}"
      - name: Terragrunt plan - ${{ matrix.environment }}
        run: |
          chmod +x ${GITHUB_WORKSPACE}/scripts/redact-output.sh
          terragrunt -chdir="terraform/environments/${ENV}" plan -no-color -detailed-exitcode | ${GITHUB_WORKSPACE}/scripts/redact-output.sh | tee tfplan.txt || exitcode=$?
          echo "terragrunt plan exit code = $exitcode"
          echo "exitcode=${exitcode}" >> $GITHUB_OUTPUT
          (( exitcode == 1 )) && exit 1 || exit 0
    env:
      TF_ENV: ${{ matrix.environment }}
      ENV: ${{ github.workflow }}


  deploy-dev-test:
    needs: plan-dev-test
    if: success()
    strategy:
      matrix:
        include:
          - environment: test
          - environment: development
    name: Terragrunt apply - ${{ github.workflow }} - ${{ matrix.environment }}
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.workflow }}-${{ matrix.environment }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
      - name: Set Account Number
        run: echo "ACCOUNT_NUMBER=$(jq -r -e --arg account_name "${GITHUB_WORKFLOW}-${TF_ENV}" '.account_ids[$account_name]' <<< $ENVIRONMENT_MANAGEMENT)" >> $GITHUB_ENV
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838 # v1.7.0
        with:
          role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_NUMBER }}:role/github-actions"
          role-session-name: githubactionsrolesession
          aws-region: ${{ env.AWS_REGION }}
      - name: Load and Configure Terraform
        uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1 # v2.0.3
        with:
          terraform_version: "~1"
          terraform_wrapper: false
      - name: Setup Terragrunt
        run: |
          wget -O /usr/local/bin/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/${TERRAGRUNT_VERSION}/terragrunt_linux_amd64
          chmod u+x /usr/local/bin/terragrunt
      - name: Init
        working-directory: "${{ env.TEAM_DIR }}/${{ matrix.project }}"
        run: |
          terragrunt init
          terragrunt workspace select "${ENV}-${TF_ENV}"
      - name: Run Terrform Apply
        run: |
          chmod +x ${GITHUB_WORKSPACE}/scripts/redact-output.sh
          terragrunt -chdir="terraform/environments/${ENV}" apply -no-color -detailed-exitcode | ${GITHUB_WORKSPACE}/scripts/redact-output.sh | tee tfplan.txt || exitcode=$?
    env:
      TF_ENV: ${{ matrix.environment }}
      ENV: ${{ github.workflow }}

  # Plan + deploy for pre-production and production environments, only from main
  plan-preprod-prod:
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        include:
          - environment: preproduction
          - environment: production
    name: Terragrunt plan - ${{ github.workflow }} - ${{ matrix.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
      - name: Set Account Number
        run: echo "ACCOUNT_NUMBER=$(jq -r -e --arg account_name "${GITHUB_WORKFLOW}-${TF_ENV}" '.account_ids[$account_name]' <<< $ENVIRONMENT_MANAGEMENT)" >> $GITHUB_ENV
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838 # v1.7.0
        with:
          role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_NUMBER }}:role/github-actions"
          role-session-name: githubactionsrolesession
          aws-region: ${{ env.AWS_REGION }}
      - name: Load and Configure Terraform
        uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1 # v2.0.3
        with:
          terraform_version: "~1"
          terraform_wrapper: false
      - name: Setup Terragrunt
        run: |
          wget -O /usr/local/bin/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/${TERRAGRUNT_VERSION}/terragrunt_linux_amd64
          chmod u+x /usr/local/bin/terragrunt
      - name: Init
        working-directory: "${{ env.TEAM_DIR }}/${{ matrix.project }}"
        run: |
          terragrunt init
          terragrunt workspace select "${ENV}-${TF_ENV}"
      - name: Run Terrform Plan
        run: |
          chmod +x ${GITHUB_WORKSPACE}/scripts/redact-output.sh
          terragrunt -chdir="terraform/environments/${ENV}" plan -no-color -detailed-exitcode | ${GITHUB_WORKSPACE}/scripts/redact-output.sh | tee tfplan.txt || exitcode=$?
    env:
      TF_ENV: ${{ matrix.environment }}
      ENV: ${{ github.workflow }}

  deploy-preprod-prod:
    needs: plan-preprod-prod
    if: success() && github.ref == 'refs/heads/main'
    strategy:
      matrix:
        include:
          - environment: preproduction
          - environment: production
    name: Terraform apply - ${{ github.workflow }} - ${{ matrix.environment }}
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.workflow }}-${{ matrix.environment }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
      - name: Set Account Number
        run: echo "ACCOUNT_NUMBER=$(jq -r -e --arg account_name "${GITHUB_WORKFLOW}-${TF_ENV}" '.account_ids[$account_name]' <<< $ENVIRONMENT_MANAGEMENT)" >> $GITHUB_ENV
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838 # v1.7.0
        with:
          role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_NUMBER }}:role/github-actions"
          role-session-name: githubactionsrolesession
          aws-region: ${{ env.AWS_REGION }}
      - name: Load and Configure Terraform
        uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1 # v2.0.3
        with:
          terraform_version: "~1"
          terraform_wrapper: false
      - name: Setup Terragrunt
        run: |
          wget -O /usr/local/bin/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/${TERRAGRUNT_VERSION}/terragrunt_linux_amd64
          chmod u+x /usr/local/bin/terragrunt
      - name: Init
        working-directory: "${{ env.TEAM_DIR }}/${{ matrix.project }}"
        run: |
          terragrunt init
          terragrunt workspace select "${ENV}-${TF_ENV}"
      - name: Run Terrform Apply
        run: |
          chmod +x ${GITHUB_WORKSPACE}/scripts/redact-output.sh
          terragrunt -chdir="terraform/environments/${ENV}" apply -no-color -detailed-exitcode | ${GITHUB_WORKSPACE}/scripts/redact-output.sh | tee tfplan.txt || exitcode=$?
    env:
      TF_ENV: ${{ matrix.environment }}
      ENV: ${{ github.workflow }}

