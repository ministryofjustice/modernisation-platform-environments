---
name: oasys
on:
  push:
    branches: 
      - main
    paths:
      - 'terraform/environments/oasys/**'
      - '.github/workflows/oasys.yml'
  pull_request:
    branches:
      - main
    types: [opened, edited, reopened, synchronize]
    paths:
      - 'terraform/environments/oasys/**'
      - '.github/workflows/oasys.yml'
  workflow_dispatch:
env:
  AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_IN_AUTOMATION: true
defaults:
  run:
    shell: bash

jobs:
  
  # These jobs run when creating a pull request
  plan-development:
    name: Plan Development - oasys
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2.3.4
      - name: Load and Configure Terraform
        uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: "~1"
          terraform_wrapper: false
      - name: Terraform plan - development
        run: |
          echo "Terraform plan - ${TF_ENV}"
          bash scripts/terraform-init.sh terraform/environments/oasys
          terraform -chdir="terraform/environments/oasys" workspace select "oasys-${TF_ENV}"
          bash scripts/terraform-plan.sh terraform/environments/oasys
        env:
          TF_ENV: development

  deploy-development:
    name: Deploy Development - oasys
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    environment:
      name: oasys-development
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2.3.4
      - name: Load and Configure Terraform
        uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: "~1"
          terraform_wrapper: false
      - name: Terraform apply - development
        run: |
          echo "Terraform apply - ${TF_ENV}"
          bash scripts/terraform-init.sh terraform/environments/oasys
          terraform -chdir="terraform/environments/oasys" workspace select "oasys-${TF_ENV}"
          bash scripts/terraform-apply.sh terraform/environments/oasys
        env:
          TF_ENV: development

  plan-test:
    name: Plan Test - oasys
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2.3.4
      - name: Load and Configure Terraform
        uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: "~1"
          terraform_wrapper: false
      - name: Terraform plan - test
        run: |
          echo "Terraform plan - ${TF_ENV}"
          bash scripts/terraform-init.sh terraform/environments/oasys
          terraform -chdir="terraform/environments/oasys" workspace select "oasys-${TF_ENV}"
          bash scripts/terraform-plan.sh terraform/environments/oasys
        env:
          TF_ENV: test

  deploy-test:
    name: Deploy Test - oasys
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    environment:
      name: oasys-test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2.3.4
      - name: Load and Configure Terraform
        uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: "~1"
          terraform_wrapper: false
      - name: Terraform apply - test
        run: |
          echo "Terraform apply - ${TF_ENV}"
          bash scripts/terraform-init.sh terraform/environments/oasys
          terraform -chdir="terraform/environments/oasys" workspace select "oasys-${TF_ENV}"
          bash scripts/terraform-apply.sh terraform/environments/oasys
        env:
          TF_ENV: test

  # These jobs run after merging to main
  plan-preproduction:
    name: Plan Preproduction - oasys
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2.3.4
      - name: Load and Configure Terraform
        uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: "~1"
          terraform_wrapper: false
      - name: Terraform plan - preproduction
        run: |
          echo "Terraform plan - ${TF_ENV}"
          bash scripts/terraform-init.sh terraform/environments/oasys
          terraform -chdir="terraform/environments/oasys" workspace select "oasys-${TF_ENV}"
          bash scripts/terraform-plan.sh terraform/environments/oasys
        env:
          TF_ENV: preproduction

  deploy-preproduction:
    name: Deploy Preproduction - oasys
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: oasys-preproduction
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2.3.4
      - name: Load and Configure Terraform
        uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: "~1"
          terraform_wrapper: false
      - name: Terraform apply - preproduction
        run: |
          echo "Terraform apply - ${TF_ENV}"
          bash scripts/terraform-init.sh terraform/environments/oasys
          terraform -chdir="terraform/environments/oasys" workspace select "oasys-${TF_ENV}"
          bash scripts/terraform-apply.sh terraform/environments/oasys
        env:
          TF_ENV: preproduction
  
  plan-production:
    name: Plan Production - oasys
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2.3.4
      - name: Load and Configure Terraform
        uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: "~1"
          terraform_wrapper: false
      - name: Terraform plan - production
        run: |
          echo "Terraform plan - ${TF_ENV}"
          bash scripts/terraform-init.sh terraform/environments/oasys
          terraform -chdir="terraform/environments/oasys" workspace select "oasys-${TF_ENV}"
          bash scripts/terraform-plan.sh terraform/environments/oasys
        env:
          TF_ENV: production

  deploy-production:
    name: Deploy Production - oasys
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: oasys-production
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2.3.4
      - name: Load and Configure Terraform
        uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: "~1"
          terraform_wrapper: false
      - name: Terraform apply - production
        run: |
          echo "Terraform apply - ${TF_ENV}"
          bash scripts/terraform-init.sh terraform/environments/oasys
          terraform -chdir="terraform/environments/oasys" workspace select "oasys-${TF_ENV}"
          bash scripts/terraform-apply.sh terraform/environments/oasys
        env:
          TF_ENV: production
