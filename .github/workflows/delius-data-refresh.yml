---
name: delius-data-refresh
on:
  workflow_dispatch:
    inputs:
      SOURCE_ACCOUNT_ID:
          description: 'Source AWS Account ID'
          required: true
          type: string
      DESTINATION_ACCOUNT_ID:
          description: 'Destination AWS Account ID'
          required: true
          type: string
      SOURCE_DB_NAME:
          description: 'Source DB Name'
          required: true
          type: string
      DESTINATION_ENVIRONMENT:
          description: 'Destination Environment'
          required: true
          type: string
      TF_DB_IDENTIFIER:
          description: 'Terraform DB Identifier'
          required: true
          type: string
      TERRAFORM_VERSION:
          description: 'Terraform Version'
          required: true
          type: string
      APPLICATION:
        description: 'Application'
        required: true
        type: string
        options:
          - delius-iaps
jobs:
  take-snapshot:
    runs-on: ubuntu-latest
    steps:
      - name: install aws-cli
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          sudo pip3 install awscli
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e1e17a757e536f70e52b5a12b2e8d1d1c60e04ef  # v2.0.0
        with:
          role-to-assume: "arn:aws:iam::${{ input.SOURCE_ACCOUNT_ID }}:role/github-actions"
          role-session-name: githubactionsrolesession
          aws-region: "eu-west-2"
      - name: Create RDS snapshot
        run: |
          aws rds create-db-snapshot \
            --db-instance-identifier "${{input.SOURCE_DB_NAME}}" \
            --db-snapshot-identifier "${{input.SOURCE_DB_NAME}}-snapshot-$(date +%Y-%m-%d)"
      - name: Wait for RDS Snapshot to be ready
        run: |
          aws rds wait db-snapshot-completed \
            --db-snapshot-identifier "${{input.SOURCE_DB_NAME}}-snapshot-$(date +%Y-%m-%d)"
      - name: Share RDS snapshot with Pre-Prod
        run: |
            aws rds modify-db-snapshot-attribute \
                --db-snapshot-identifier "${{input.SOURCE_DB_NAME}}-snapshot-$(date +%Y-%m-%d)" \
                --attribute-name restore \
                --values-to-add "${{ input.DESTINATION_ACCOUNT_ID }}"
  restore-preprod-db-from-snapshot:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e1e17a757e536f70e52b5a12b2e8d1d1c60e04ef  # v2.0.0
        with:
          role-to-assume: "arn:aws:iam::${{ input.DESTINATION_ACCOUNT_ID }}:role/github-actions"
          role-session-name: githubactionsrolesession
          aws-region: "eu-west-2"
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1  # v2.0.3
        with:
          terraform_version: "${{ inputs.TERRAFORM_VERSION }}"
          terraform_wrapper: false
      - name: Terraform Init
        working-directory: "terraform/environments/${{ inputs.APPLICATION }}"
        run: |
          terraform init

      - name: Terraform Workspace Select
        working-directory: "terraform/environments/${{ inputs.APPLICATION }}"
        run: |
          terraform workspace select "${{ inputs.DESTINATION_ENVIRONMENT }}"

      - name: Terraform apply
        working-directory: "terraform/environments/${{ inputs.APPLICATION }}"
        run: |
          terraform apply -auto-approve -target="${{ inputs.TF_DB_IDENTIFIER }}" -var="rds_refresh_snapshot_id=${{ inputs.SOURCE_DB_NAME }}-snapshot-$(date +%Y-%m-%d)"
