---
name: ppud
on:
  push:
    branches: 
      - main
    paths:
      - 'terraform/environments/ppud/**'
      - '.github/workflows/ppud.yml'
  pull_request:
    branches:
      - main
    types: [opened, edited, reopened, synchronize]
    paths:
      - 'terraform/environments/ppud/**'
      - '.github/workflows/ppud.yml'
  workflow_dispatch:
env:
  AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_IN_AUTOMATION: true
defaults:
  run:
    shell: bash

jobs:
  
  # These jobs run when creating a pull request
#  plan-development:
#    name: Plan Development - ppud
#    runs-on: ubuntu-latest
#    if: github.ref != 'refs/heads/main' || github.event_name == 'workflow_dispatch'
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v3.0.2
#      - name: Load and Configure Terraform
#        uses: hashicorp/setup-terraform@v2.0.0
#        with:
#          terraform_version: 1.0.1
#          terraform_wrapper: false
#      - name: Terraform plan - development
#        run: |
#          echo "Terraform plan - ${TF_ENV}"
#          bash scripts/terraform-init.sh terraform/environments/ppud
#          terraform -chdir="terraform/environments/ppud" workspace select "ppud-${TF_ENV}"
#          bash scripts/terraform-plan.sh terraform/environments/ppud
#        env:
#          TF_ENV: development
#
#  deploy-development:
#    name: Deploy Development - ppud
#    runs-on: ubuntu-latest
#    if: github.ref != 'refs/heads/main' || github.event_name == 'workflow_dispatch'
#    environment:
#      name: ppud-development
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v3.0.2
#      - name: Load and Configure Terraform
#        uses: hashicorp/setup-terraform@v2.0.0
#        with:
#          terraform_version: 1.0.1
#          terraform_wrapper: false
#      - name: Terraform apply - development
#        run: |
#          echo "Terraform apply - ${TF_ENV}"
#          bash scripts/terraform-init.sh terraform/environments/ppud
#          terraform -chdir="terraform/environments/ppud" workspace select "ppud-${TF_ENV}"
#          bash scripts/terraform-apply.sh terraform/environments/ppud
#        env:
#          TF_ENV: development
#
#  plan-test:
#    name: Plan Test - ppud
#    runs-on: ubuntu-latest
#    if: github.ref != 'refs/heads/main' || github.event_name == 'workflow_dispatch'
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v3.0.2
#      - name: Load and Configure Terraform
#        uses: hashicorp/setup-terraform@v2.0.0
#        with:
#          terraform_version: 1.0.1
#          terraform_wrapper: false
#      - name: Terraform plan - test
#        run: |
#          echo "Terraform plan - ${TF_ENV}"
#          bash scripts/terraform-init.sh terraform/environments/ppud
#          terraform -chdir="terraform/environments/ppud" workspace select "ppud-${TF_ENV}"
#          bash scripts/terraform-plan.sh terraform/environments/ppud
#        env:
#          TF_ENV: test
#
#  deploy-test:
#    name: Deploy Test - ppud
#    runs-on: ubuntu-latest
#    if: github.ref != 'refs/heads/main' || github.event_name == 'workflow_dispatch'
#    environment:
#      name: ppud-test
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v3.0.2
#      - name: Load and Configure Terraform
#        uses: hashicorp/setup-terraform@v2.0.0
#        with:
#          terraform_version: 1.0.1
#          terraform_wrapper: false
#      - name: Terraform apply - test
#        run: |
#          echo "Terraform apply - ${TF_ENV}"
#          bash scripts/terraform-init.sh terraform/environments/ppud
#          terraform -chdir="terraform/environments/ppud" workspace select "ppud-${TF_ENV}"
#          bash scripts/terraform-apply.sh terraform/environments/ppud
#        env:
#          TF_ENV: test
#
  # These jobs run after merging to main
#  plan-preproduction:
#    name: Plan Preproduction - ppud
#    runs-on: ubuntu-latest
#    if: github.ref == 'refs/heads/main'
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v3.0.2
#      - name: Load and Configure Terraform
#        uses: hashicorp/setup-terraform@v2.0.0
#        with:
#          terraform_version: 1.0.1
#          terraform_wrapper: false
#      - name: Terraform plan - preproduction
#        run: |
#          echo "Terraform plan - ${TF_ENV}"
#          bash scripts/terraform-init.sh terraform/environments/ppud
#          terraform -chdir="terraform/environments/ppud" workspace select "ppud-${TF_ENV}"
#          bash scripts/terraform-plan.sh terraform/environments/ppud
#        env:
#          TF_ENV: preproduction
#
#  deploy-preproduction:
#    name: Deploy Preproduction - ppud
#    runs-on: ubuntu-latest
#    if: github.ref == 'refs/heads/main'
#    environment:
#      name: ppud-preproduction
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v3.0.2
#      - name: Load and Configure Terraform
#        uses: hashicorp/setup-terraform@v2.0.0
#        with:
#          terraform_version: 1.0.1
#          terraform_wrapper: false
#      - name: Terraform apply - preproduction
#        run: |
#          echo "Terraform apply - ${TF_ENV}"
#          bash scripts/terraform-init.sh terraform/environments/ppud
#          terraform -chdir="terraform/environments/ppud" workspace select "ppud-${TF_ENV}"
#          bash scripts/terraform-apply.sh terraform/environments/ppud
#        env:
#          TF_ENV: preproduction
#
  plan-production:
    name: Plan Production - ppud
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.0.2
      - name: Load and Configure Terraform
        uses: hashicorp/setup-terraform@v2.0.0
        with:
          terraform_version: 1.0.1
          terraform_wrapper: false
      - name: Terraform plan - production
        run: |
          echo "Terraform plan - ${TF_ENV}"
          bash scripts/terraform-init.sh terraform/environments/ppud
          terraform -chdir="terraform/environments/ppud" workspace select "ppud-${TF_ENV}"
          bash scripts/terraform-plan.sh terraform/environments/ppud
        env:
          TF_ENV: production

  deploy-production:
    name: Deploy Production - ppud
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: ppud-production
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.0.2
      - name: Load and Configure Terraform
        uses: hashicorp/setup-terraform@v2.0.0
        with:
          terraform_version: 1.0.1
          terraform_wrapper: false
      - name: Terraform apply - production
        run: |
          echo "Terraform apply - ${TF_ENV}"
          bash scripts/terraform-init.sh terraform/environments/ppud
          terraform -chdir="terraform/environments/ppud" workspace select "ppud-${TF_ENV}"
          bash scripts/terraform-apply.sh terraform/environments/ppud
        env:
          TF_ENV: production
