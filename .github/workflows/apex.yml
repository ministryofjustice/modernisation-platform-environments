---
name: apex
on:
  push:
    branches:
      - main
    paths:
      - 'terraform/environments/apex/**'
      - '.github/workflows/apex.yml'
  pull_request:
    branches:
      - main
    types: [opened, edited, reopened, synchronize]
    paths:
      - 'terraform/environments/apex/**'
      - '.github/workflows/apex.yml'
  workflow_dispatch:
env:
  AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_IN_AUTOMATION: true
defaults:
  run:
    shell: bash

jobs:

  # These jobs run when creating a pull request
  plan-development:
    name: Plan Development - apex
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.0.2
      - name: Load and Configure Terraform
        uses: hashicorp/setup-terraform@v2.0.0
        with:
          terraform_version: "~1"
          terraform_wrapper: false
      - name: Terraform plan - development
        run: |
          echo "Terraform plan - ${TF_ENV}"
          bash scripts/terraform-init.sh terraform/environments/apex
          terraform -chdir="terraform/environments/apex" workspace select "apex-${TF_ENV}"
          bash scripts/terraform-plan.sh terraform/environments/apex
        env:
          TF_ENV: development

  deploy-development:
    name: Deploy Development - apex
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    environment:
      name: apex-development
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.0.2
      - name: Load and Configure Terraform
        uses: hashicorp/setup-terraform@v2.0.0
        with:
          terraform_version: "~1"
          terraform_wrapper: false
      - name: Terraform apply - development
        run: |
          echo "Terraform apply - ${TF_ENV}"
          bash scripts/terraform-init.sh terraform/environments/apex
          terraform -chdir="terraform/environments/apex" workspace select "apex-${TF_ENV}"
          bash scripts/terraform-apply.sh terraform/environments/apex
        env:
          TF_ENV: development

  # plan-test:
  #   name: Plan Test - apex
  #   runs-on: ubuntu-latest
  #   if: github.ref != 'refs/heads/main' || github.event_name == 'workflow_dispatch'
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v3.0.2
  #     - name: Load and Configure Terraform
  #       uses: hashicorp/setup-terraform@v2.0.0
  #       with:
  #         terraform_version: "~1"
  #         terraform_wrapper: false
  #     - name: Terraform plan - test
  #       run: |
  #         echo "Terraform plan - ${TF_ENV}"
  #         bash scripts/terraform-init.sh terraform/environments/apex
  #         terraform -chdir="terraform/environments/apex" workspace select "apex-${TF_ENV}"
  #         bash scripts/terraform-plan.sh terraform/environments/apex
  #       env:
  #         TF_ENV: test
  #
  # deploy-test:
  #   name: Deploy Test - apex
  #   runs-on: ubuntu-latest
  #   if: github.ref != 'refs/heads/main' || github.event_name == 'workflow_dispatch'
  #   environment:
  #     name: apex-test
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v3.0.2
  #     - name: Load and Configure Terraform
  #       uses: hashicorp/setup-terraform@v2.0.0
  #       with:
  #         terraform_version: "~1"
  #         terraform_wrapper: false
  #     - name: Terraform apply - test
  #       run: |
  #         echo "Terraform apply - ${TF_ENV}"
  #         bash scripts/terraform-init.sh terraform/environments/apex
  #         terraform -chdir="terraform/environments/apex" workspace select "apex-${TF_ENV}"
  #         bash scripts/terraform-apply.sh terraform/environments/apex
  #       env:
  #         TF_ENV: test
  #
  # # These jobs run after merging to main
  # plan-preproduction:
  #   name: Plan Preproduction - apex
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v3.0.2
  #     - name: Load and Configure Terraform
  #       uses: hashicorp/setup-terraform@v2.0.0
  #       with:
  #         terraform_version: "~1"
  #         terraform_wrapper: false
  #     - name: Terraform plan - preproduction
  #       run: |
  #         echo "Terraform plan - ${TF_ENV}"
  #         bash scripts/terraform-init.sh terraform/environments/apex
  #         terraform -chdir="terraform/environments/apex" workspace select "apex-${TF_ENV}"
  #         bash scripts/terraform-plan.sh terraform/environments/apex
  #       env:
  #         TF_ENV: preproduction
  #
  # deploy-preproduction:
  #   name: Deploy Preproduction - apex
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   environment:
  #     name: apex-preproduction
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v3.0.2
  #     - name: Load and Configure Terraform
  #       uses: hashicorp/setup-terraform@v2.0.0
  #       with:
  #         terraform_version: "~1"
  #         terraform_wrapper: false
  #     - name: Terraform apply - preproduction
  #       run: |
  #         echo "Terraform apply - ${TF_ENV}"
  #         bash scripts/terraform-init.sh terraform/environments/apex
  #         terraform -chdir="terraform/environments/apex" workspace select "apex-${TF_ENV}"
  #         bash scripts/terraform-apply.sh terraform/environments/apex
  #       env:
  #         TF_ENV: preproduction
  #
  # plan-production:
  #   name: Plan Production - apex
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v3.0.2
  #     - name: Load and Configure Terraform
  #       uses: hashicorp/setup-terraform@v2.0.0
  #       with:
  #         terraform_version: "~1"
  #         terraform_wrapper: false
  #     - name: Terraform plan - production
  #       run: |
  #         echo "Terraform plan - ${TF_ENV}"
  #         bash scripts/terraform-init.sh terraform/environments/apex
  #         terraform -chdir="terraform/environments/apex" workspace select "apex-${TF_ENV}"
  #         bash scripts/terraform-plan.sh terraform/environments/apex
  #       env:
  #         TF_ENV: production
  #
  # deploy-production:
  #   name: Deploy Production - apex
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   environment:
  #     name: apex-production
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v3.0.2
  #     - name: Load and Configure Terraform
  #       uses: hashicorp/setup-terraform@v2.0.0
  #       with:
  #         terraform_version: "~1"
  #         terraform_wrapper: false
  #     - name: Terraform apply - production
  #       run: |
  #         echo "Terraform apply - ${TF_ENV}"
  #         bash scripts/terraform-init.sh terraform/environments/apex
  #         terraform -chdir="terraform/environments/apex" workspace select "apex-${TF_ENV}"
  #         bash scripts/terraform-apply.sh terraform/environments/apex
  #       env:
  #         TF_ENV: production
