---
name: apex
on:
  push:
    branches:
      - main
    paths:
      - 'terraform/environments/apex/**'
      - '.github/workflows/apex.yml'
  pull_request:
    branches:
      - main
    types: [opened, edited, reopened, synchronize]
    paths:
      - 'terraform/environments/apex/**'
      - '.github/workflows/apex.yml'
  workflow_dispatch:
env:
  TF_IN_AUTOMATION: true
  AWS_REGION: "eu-west-2"
  ENVIRONMENT_MANAGEMENT: ${{ secrets.MODERNISATION_PLATFORM_ENVIRONMENTS }}
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout
defaults:
  run:
    shell: bash

jobs:

  plan-dev-test:
    strategy:
      matrix:
        include:
          - environment: development
          # - environment: test
    name: Plan - ${{  matrix.environment }}
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    env:
      TF_ENV: ${{ matrix.environment }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.1.0
      - name: Set Account Number
        run: echo "ACCOUNT_NUMBER=$(jq -r -e --arg account_name "${GITHUB_WORKFLOW}-${TF_ENV}" '.account_ids[$account_name]' <<< $ENVIRONMENT_MANAGEMENT)" >> $GITHUB_ENV
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_NUMBER }}:role/github-actions"
          role-session-name: githubactionsrolesession
          aws-region: ${{ env.AWS_REGION }}
      - name: Load and Configure Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: "~1"
          terraform_wrapper: false
      - name: Plan - ${{ matrix.environment }}
        run: |
          terraform --version
          echo "Terraform plan - ${TF_ENV}"
          bash scripts/terraform-init.sh terraform/environments/$GITHUB_WORKFLOW
          terraform -chdir="terraform/environments/${GITHUB_WORKFLOW}" workspace select "${GITHUB_WORKFLOW}-${TF_ENV}"
          bash scripts/terraform-plan.sh terraform/environments/$GITHUB_WORKFLOW

  # These jobs run when creating a pull request
  deploy-dev-test:
    needs: plan-dev-test
    if: success()
    strategy:
      matrix:
        include:
          - environment: development
          # - environment: test
    name: Apply - ${{  matrix.environment }}
    runs-on: ubuntu-latest
    env:
      TF_ENV: ${{ matrix.environment }}
    environment:
      name: ${{ github.workflow }}-${{ matrix.environment }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.1.0
      - name: Set Account Number
        run: echo "ACCOUNT_NUMBER=$(jq -r -e --arg account_name "${GITHUB_WORKFLOW}-${TF_ENV}" '.account_ids[$account_name]' <<< $ENVIRONMENT_MANAGEMENT)" >> $GITHUB_ENV
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_NUMBER }}:role/github-actions"
          role-session-name: githubactionsrolesession
          aws-region: ${{ env.AWS_REGION }}
      - name: Load and Configure Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: "~1"
          terraform_wrapper: false
      - name: Apply - ${{ matrix.environment }}
        run: |
          terraform --version
          echo "Terraform apply - ${TF_ENV}"
          bash scripts/terraform-init.sh terraform/environments/$GITHUB_WORKFLOW
          terraform -chdir="terraform/environments/${GITHUB_WORKFLOW}" workspace select "${GITHUB_WORKFLOW}-${TF_ENV}"
          bash scripts/terraform-apply.sh terraform/environments/$GITHUB_WORKFLOW

#  # Plan + deploy for pre-production and production environments, only from main
#   plan-preprod-prod:
#     strategy:
#       matrix:
#         include:
#           - environment: preproduction
#           - environment: production
#     name: Plan - ${{  matrix.environment }}
#     runs-on: ubuntu-latest
#     if: github.ref == 'refs/heads/main'
#     env:
#       TF_ENV: ${{ matrix.environment }}
#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v3.1.0
#       - name: Set Account Number
#         run: echo "ACCOUNT_NUMBER=$(jq -r -e --arg account_name "${GITHUB_WORKFLOW}-${TF_ENV}" '.account_ids[$account_name]' <<< $ENVIRONMENT_MANAGEMENT)" >> $GITHUB_ENV
#       - name: configure aws credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_NUMBER }}:role/github-actions"
#           role-session-name: githubactionsrolesession
#           aws-region: ${{ env.AWS_REGION }}
#       - name: Load and Configure Terraform
#         uses: hashicorp/setup-terraform@v2.0.3
#         with:
#           terraform_version: "~1"
#           terraform_wrapper: false
#       - name: Plan - ${{ matrix.environment }}
#         run: |
#           terraform --version
#           echo "Terraform plan - ${TF_ENV}"
#           bash scripts/terraform-init.sh terraform/environments/$GITHUB_WORKFLOW
#           terraform -chdir="terraform/environments/${GITHUB_WORKFLOW}" workspace select "${GITHUB_WORKFLOW}-${TF_ENV}"
#           bash scripts/terraform-plan.sh terraform/environments/$GITHUB_WORKFLOW
#   # These jobs run when creating a pull request
#   deploy-preprod-prod:
#     needs: plan-preprod-prod
#     if: success()
#     strategy:
#       matrix:
#         include:
#           - environment: preproduction
#           - environment: production
#     name: Apply - ${{  matrix.environment }}
#     runs-on: ubuntu-latest
#     env:
#       TF_ENV: ${{ matrix.environment }}
#     environment:
#       name: ${{ github.workflow }}-${{ matrix.environment }}
#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v3.1.0
#       - name: Set Account Number
#         run: echo "ACCOUNT_NUMBER=$(jq -r -e --arg account_name "${GITHUB_WORKFLOW}-${TF_ENV}" '.account_ids[$account_name]' <<< $ENVIRONMENT_MANAGEMENT)" >> $GITHUB_ENV
#       - name: configure aws credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_NUMBER }}:role/github-actions"
#           role-session-name: githubactionsrolesession
#           aws-region: ${{ env.AWS_REGION }}
#       - name: Load and Configure Terraform
#         uses: hashicorp/setup-terraform@v2.0.3
#         with:
#           terraform_version: "~1"
#           terraform_wrapper: false
#       - name: Apply - ${{ matrix.environment }}
#         run: |
#           terraform --version
#           echo "Terraform apply - ${TF_ENV}"
#           bash scripts/terraform-init.sh terraform/environments/$GITHUB_WORKFLOW
#           terraform -chdir="terraform/environments/${GITHUB_WORKFLOW}" workspace select "${GITHUB_WORKFLOW}-${TF_ENV}"
#           bash scripts/terraform-apply.sh terraform/environments/$GITHUB_WORKFLOW