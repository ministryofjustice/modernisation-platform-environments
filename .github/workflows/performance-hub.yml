---
name: performance-hub
on:
  push:
    branches:
      - main
    paths:
      - 'terraform/environments/performance-hub/**'
      - '.github/workflows/performance-hub.yml'
  pull_request:
    branches:
      - main
    types: [opened, edited, reopened, synchronize]
    paths:
      - 'terraform/environments/performance-hub/**'
      - '.github/workflows/performance-hub.yml'
  workflow_dispatch:
env:
  AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_IN_AUTOMATION: true
defaults:
  run:
    shell: bash

jobs:
  #These jobs run when creating a pull request
  #  plan-development:
  #    name: Plan Development - performance-hub
  #    runs-on: ubuntu-latest
  #    if: github.ref != 'refs/heads/main' || github.event_name == 'workflow_dispatch'
  #    steps:
  #      - name: Checkout Repository
  #        uses: actions/checkout@v3.1.0
  #      - name: Load and Configure Terraform
  #        uses: hashicorp/setup-terraform@v2.0.0
  #        with:
  #          terraform_version: "~1"
  #          terraform_wrapper: false
  #      - name: Terraform plan - development
  #        run: |
  #          terraform --version
  #          echo "Terraform plan - ${TF_ENV}"
  #          bash scripts/terraform-init.sh terraform/environments/performance-hub
  #          terraform -chdir="terraform/environments/performance-hub" workspace select "performance-hub-${TF_ENV}"
  #          bash scripts/terraform-plan.sh terraform/environments/performance-hub
  #        env:
  #          TF_ENV: development

  #  deploy-development:
  #    name: Deploy Development - performance-hub
  #    runs-on: ubuntu-latest
  #    if: github.ref != 'refs/heads/main' || github.event_name == 'workflow_dispatch'
  #    environment:
  #      name: performance-hub-development
  #    steps:
  #      - name: Checkout Repository
  #        uses: actions/checkout@v3.1.0
  #      - name: Load and Configure Terraform
  #        uses: hashicorp/setup-terraform@v2.0.0
  #        with:
  #          terraform_version: "~1"
  #          terraform_wrapper: false
  #      - name: Terraform apply - development
  #        run: |
  #          terraform --version
  #          echo "Terraform apply - ${TF_ENV}"
  #          bash scripts/terraform-init.sh terraform/environments/performance-hub
  #          terraform -chdir="terraform/environments/performance-hub" workspace select "performance-hub-${TF_ENV}"
  #          bash scripts/terraform-apply.sh terraform/environments/performance-hub
  #        env:
  #          TF_ENV: development

  # plan-test:
  #   name: Plan Test - performance-hub
  #   runs-on: ubuntu-latest
  #   if: github.ref != 'refs/heads/main'
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v3.1.0
  #     - name: Load and Configure Terraform
  #       uses: hashicorp/setup-terraform@v2.0.0
  #       with:
  #         terraform_version: "~1"
  #         terraform_wrapper: false
  #     - name: Terraform plan - test
  #       run: |
  #         terraform --version
  #         echo "Terraform plan - ${TF_ENV}"
  #         bash scripts/terraform-init.sh terraform/environments/performance-hub
  #         terraform -chdir="terraform/environments/performance-hub" workspace select "performance-hub-${TF_ENV}"
  #         bash scripts/terraform-plan.sh terraform/environments/performance-hub
  #       env:
  #         TF_ENV: test

  # deploy-test:
  #   name: Deploy Test - performance-hub
  #   runs-on: ubuntu-latest
  #   if: github.ref != 'refs/heads/main'
  #   environment:
  #     name: performance-hub-test
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v3.1.0
  #     - name: Load and Configure Terraform
  #       uses: hashicorp/setup-terraform@v2.0.0
  #       with:
  #         terraform_version: "~1"
  #         terraform_wrapper: false
  #     - name: Terraform apply - test
  #       run: |
  #         terraform --version
  #         echo "Terraform apply - ${TF_ENV}"
  #         bash scripts/terraform-init.sh terraform/environments/performance-hub
  #         terraform -chdir="terraform/environments/performance-hub" workspace select "performance-hub-${TF_ENV}"
  #         bash scripts/terraform-apply.sh terraform/environments/performance-hub
  #       env:
  #         TF_ENV: test

  # These jobs run after merging to main
  plan-preproduction:
    name: Plan Preproduction - performance-hub
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.1.0
      - name: Load and Configure Terraform
        uses: hashicorp/setup-terraform@v2.0.0
        with:
          terraform_version: "~1"
          terraform_wrapper: false
      - name: Terraform plan - preproduction
        run: |
          terraform --version
          echo "Terraform plan - ${TF_ENV}"
          bash scripts/terraform-init.sh terraform/environments/performance-hub
          terraform -chdir="terraform/environments/performance-hub" workspace select "performance-hub-${TF_ENV}"
          bash scripts/terraform-plan.sh terraform/environments/performance-hub
        env:
          TF_ENV: preproduction

  deploy-preproduction:
    name: Deploy Preproduction - performance-hub
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: performance-hub-preproduction
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.1.0
      - name: Load and Configure Terraform
        uses: hashicorp/setup-terraform@v2.0.0
        with:
          terraform_version: "~1"
          terraform_wrapper: false
      - name: Terraform apply - preproduction
        run: |
          terraform --version
          echo "Terraform apply - ${TF_ENV}"
          bash scripts/terraform-init.sh terraform/environments/performance-hub
          terraform -chdir="terraform/environments/performance-hub" workspace select "performance-hub-${TF_ENV}"
          bash scripts/terraform-apply.sh terraform/environments/performance-hub
        env:
          TF_ENV: preproduction

  plan-production:
    name: Plan Production - performance-hub
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.1.0
      - name: Load and Configure Terraform
        uses: hashicorp/setup-terraform@v2.0.0
        with:
          terraform_version: "~1"
          terraform_wrapper: false
      - name: Terraform plan - production
        run: |
          terraform --version
          echo "Terraform plan - ${TF_ENV}"
          bash scripts/terraform-init.sh terraform/environments/performance-hub
          terraform -chdir="terraform/environments/performance-hub" workspace select "performance-hub-${TF_ENV}"
          bash scripts/terraform-plan.sh terraform/environments/performance-hub
        env:
          TF_ENV: production

  deploy-production:
    name: Deploy Production - performance-hub
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: performance-hub-production
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.1.0
      - name: Load and Configure Terraform
        uses: hashicorp/setup-terraform@v2.0.0
        with:
          terraform_version: "~1"
          terraform_wrapper: false
      - name: Terraform apply - production
        run: |
          terraform --version
          echo "Terraform apply - ${TF_ENV}"
          bash scripts/terraform-init.sh terraform/environments/performance-hub
          terraform -chdir="terraform/environments/performance-hub" workspace select "performance-hub-${TF_ENV}"
          bash scripts/terraform-apply.sh terraform/environments/performance-hub
        env:
          TF_ENV: production
