---
name: nomis
on:
  push:
    branches:
      - main
    paths:
      - 'terraform/environments/nomis/**'
      - '.github/workflows/nomis.yml'
  pull_request:
    branches:
      - main
    types: [opened, edited, reopened, synchronize]
    paths:
      - 'terraform/environments/nomis/**'
      - '.github/workflows/nomis.yml'
env:
  AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  GITHUB_TOKEN: ${{ secrets.DSO_GITHUB_AUTOMATION_PAT }}
  TF_IN_AUTOMATION: true
defaults:
  run:
    shell: bash

jobs:
  # Plan + deploy for development and test enironments, never from main
  plan-dev-test:
    strategy:
      matrix:
        include:
          - environment: test
          - environment: development
    name: Terraform plan - nomis - ${{ matrix.environment }}
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    environment:
      name: nomis-${{ matrix.environment }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.0.2
      - name: Load and Configure Terraform
        uses: hashicorp/setup-terraform@v2.0.0
        with:
          terraform_version: "~1"
          terraform_wrapper: false
      - name: Terraform plan - ${{ matrix.environment }}
        run: |
          terraform --version
          echo "Terraform plan - ${TF_ENV}"
          bash scripts/terraform-init.sh terraform/environments/nomis
          terraform -chdir="terraform/environments/nomis" workspace select "nomis-${TF_ENV}"
          bash scripts/terraform-plan.sh terraform/environments/nomis
        env:
          TF_ENV: ${{ matrix.environment }}
  deploy-dev-test:
    strategy:
      matrix:
        include:
          - environment: test
          - environment: development
    if: github.ref != 'refs/heads/main'
    name: Terraform apply - nomis - ${{ matrix.environment }}
    environment:
      name: nomis-${{ matrix.environment }}
    - name: Run Terrform Apply
      run: |
        terraform --version
        echo "Terraform apply - ${TF_ENV}"
        bash scripts/terraform-init.sh terraform/environments/nomis
        terraform -chdir="terraform/environments/nomis" workspace select "nomis-${TF_ENV}"
        bash scripts/terraform-apply.sh terraform/environments/nomis
      env:
          TF_ENV: ${{ matrix.environment }}

  # Plan + deploy for pre-production and production enironments, only from main
  plan-preprod-prod:
    strategy:
      matrix:
        include:
          - environment: preproduction
          - environment: production
    name: Terraform plan - nomis - ${{ matrix.environment }}
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: nomis-${{ matrix.environment }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.0.2
      - name: Load and Configure Terraform
        uses: hashicorp/setup-terraform@v2.0.0
        with:
          terraform_version: "~1"
          terraform_wrapper: false
      - name: Terraform plan - ${{ matrix.environment }}
        run: |
          terraform --version
          echo "Terraform plan - ${TF_ENV}"
          bash scripts/terraform-init.sh terraform/environments/nomis
          terraform -chdir="terraform/environments/nomis" workspace select "nomis-${TF_ENV}"
          bash scripts/terraform-plan.sh terraform/environments/nomis
        env:
          TF_ENV: ${{ matrix.environment }}
  deploy-preprod-prod:
    strategy:
      matrix:
        include:
          - environment: preproduction
          - environment: production
    if: github.ref == 'refs/heads/main'
    name: Terraform apply - nomis - ${{ matrix.environment }}
    environment:
      name: nomis-${{ matrix.environment }}
    steps:
      - name: Run Terrform Apply
        run: |
          terraform --version
          echo "Terraform apply - ${TF_ENV}"
          bash scripts/terraform-init.sh terraform/environments/nomis
          terraform -chdir="terraform/environments/nomis" workspace select "nomis-${TF_ENV}"
          bash scripts/terraform-apply.sh terraform/environments/nomis
        env:
            TF_ENV: ${{ matrix.environment }}
