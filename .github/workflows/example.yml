---
name: example
on:
  push:
    branches: 
      - main
    paths:
      - 'terraform/environments/example/**'
      - '.github/workflows/example.yml'
  pull_request:
    branches:
      - main
    types: [opened, edited, reopened, synchronize]
    paths:
      - 'terraform/environments/example/**'
      - '.github/workflows/example.yml'
  workflow_dispatch:
env:
  TF_IN_AUTOMATION: true
  AWS_REGION: "eu-west-2"
  ENVIRONMENT_MANAGEMENT: ${{ secrets.MODERNISATION_PLATFORM_ENVIRONMENTS }}
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout
defaults:
  run:
    shell: bash

jobs:
  
  # These jobs run when creating a pull request
  plan-development:
    name: Plan Development - example
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    env:
      TF_ENV: development
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.0.2
      - name: Set Account Number
        run: echo "ACCOUNT_NUMBER=$(jq -r -e --arg account_name "example-${TF_ENV}" '.account_ids[$account_name]' <<< $ENVIRONMENT_MANAGEMENT)" >> $GITHUB_ENV
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_NUMBER }}:role/github-actions"
          role-session-name: githubactionsrolesession
          aws-region: ${{ env.AWS_REGION }}
      - name: Load and Configure Terraform
        uses: hashicorp/setup-terraform@v2.0.0
        with:
          terraform_version: "~1"
          terraform_wrapper: false
      - name: Terraform plan - development
        run: |
          terraform --version
          echo "Terraform plan - ${TF_ENV}"
          bash scripts/terraform-init.sh terraform/environments/example
          terraform -chdir="terraform/environments/example" workspace select "example-${TF_ENV}"
          bash scripts/terraform-plan.sh terraform/environments/example

  deploy-development:
    name: Deploy Development - example
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    env:
      TF_ENV: development
    environment:
      name: example-development
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.0.2
      - name: Set Account Number
        run: echo "ACCOUNT_NUMBER=$(jq -r -e --arg account_name "example-${TF_ENV}" '.account_ids[$account_name]' <<< $ENVIRONMENT_MANAGEMENT)" >> $GITHUB_ENV
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_NUMBER }}:role/github-actions"
          role-session-name: githubactionsrolesession
          aws-region: ${{ env.AWS_REGION }}
      - name: Load and Configure Terraform
        uses: hashicorp/setup-terraform@v2.0.0
        with:
          terraform_version: "~1"
          terraform_wrapper: false
      - name: Terraform apply - development
        run: |
          terraform --version
          echo "Terraform apply - ${TF_ENV}"
          bash scripts/terraform-init.sh terraform/environments/example
          terraform -chdir="terraform/environments/example" workspace select "example-${TF_ENV}"
          bash scripts/terraform-apply.sh terraform/environments/example
