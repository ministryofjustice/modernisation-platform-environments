---
name: terraform strategy

# Create a variable that can be used in a strategy matrix in a separate
# job, for example, reusable_terraform_plan_apply.yml.
#
# The variable will contain each of the environments for the application
# and a variable for whether a plan or apply should be run, depending on
# whether the job is run from the main branch or not.
#
# Possible values of strategy_type listed below:
#
# standard_four_accounts
#   branch: run plan on all 4 accounts but allow apply to development and test
#   main:   run plan and apply on all 4 accounts

on:
  workflow_call:
    inputs:
      application:
        type: string
        required: true
        description: "Application name for which this strategy matrix pipeline should run. This is later used to identify environments from the JSON environments files in the MP repo: https://github.com/ministryofjustice/modernisation-platform/tree/main/environments."
    outputs:
      matrix:
        description: "Matrix json string to feed that can be used as strategy in separate terraform job"
        value: ${{ jobs.strategy.outputs.matrix }}

jobs:
  strategy:
    name: "strategy"
    runs-on: ubuntu-latest
    outputs:
      matrix: "${{ steps.strategy.outputs.matrix }}"
    steps:
      - name: Set Strategy Matrix
        id: strategy
        run: | 
          echo '{"include":[' > matrix.out
          if [[ "${{ github.ref }}" != "refs/heads/main" ]]; then
            curl -X GET 'https://raw.githubusercontent.com/ministryofjustice/modernisation-platform/main/environments/${{ inputs.application }}.json' | jq -r '.environments[]' | jq '.name' | jq 'if contains("production") then {"target": ., "action":"plan"} else {"target": ., "action":"plan_apply"} end' -j | sed s"/}{/},{/g" >> matrix.out
          else
            curl -X GET 'https://raw.githubusercontent.com/ministryofjustice/modernisation-platform/main/environments/${{ inputs.application }}.json' | jq  -r '.environments[] | {"target" : .name, "action" : "plan_apply"}' -j | sed s"/}{/},{/g" >> matrix.out
          fi
          echo ']}' >> matrix.out
          matrix=$(cat matrix.out | jq -r)
          echo 'matrix<<EOF' >> $GITHUB_OUTPUT
          echo "${matrix}" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
          echo "${matrix}"
