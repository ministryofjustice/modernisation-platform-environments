name: Redeploy after nuke

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/nuke-redeploy.yml'
  pull_request:
    branches:
      - main
    types: [opened, edited, reopened, synchronize]
    paths:
      - '.github/workflows/nuke-redeploy.yml'
  schedule:
    # * is a special character in YAML so you have to quote this string
    # trigger every sunday at 12:00am
    - cron: '0 12 * * 0'
  workflow_dispatch:
env:
  AWS_REGION: "eu-west-2"
  MODERNISATION_PLATFORM_ACCOUNT_ID: ${{ secrets.MODERNISATION_PLATFORM_ACCOUNT_ID }}
  PASSPHRASE: ${{ secrets.PASSPHRASE }}
  TF_IN_AUTOMATION: true

permissions: {}

defaults:
  run:
    shell: bash

jobs:
  fetch-secrets:
    uses: ministryofjustice/modernisation-platform-github-actions/.github/workflows/aws-secrets-management.yml@3f9fb1af00462c69c806640652ddf41292963615 # v3.2.5
    permissions:
      id-token: write
      contents: read
    secrets:
        MODERNISATION_PLATFORM_ACCOUNT_NUMBER: ${{ secrets.MODERNISATION_PLATFORM_ACCOUNT_ID }}
        PASSPHRASE: ${{ secrets.PASSPHRASE }}
        
  setup-matrix:
    runs-on: ubuntu-latest
    needs: fetch-secrets
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Decrypt Secrets
        uses: ministryofjustice/modernisation-platform-github-actions/decrypt-secrets@3f9fb1af00462c69c806640652ddf41292963615 # v3.2.5
        with:
          nuke_rebuild_account_ids: ${{ needs.fetch-secrets.outputs.nuke_rebuild_account_ids }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}
      - id: set-matrix
        run: echo "matrix=$(jq -c '.rebuild_accounts | sort' <<< $NUKE_REBUILD_ACCOUNT_IDS)" >> $GITHUB_OUTPUT

  redeploy-after-nuke:
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read # This is required for actions/checkout
    strategy:
      fail-fast: false
      matrix:
        nuke_accts: ${{ fromJSON(needs.setup-matrix.outputs.matrix) }}
    name: Redeploy after nuke
    needs: [setup-matrix,fetch-secrets]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Decrypt Secrets
        uses: ministryofjustice/modernisation-platform-github-actions/decrypt-secrets@3f9fb1af00462c69c806640652ddf41292963615 # v3.2.5
        with:
          environment_management: ${{ needs.fetch-secrets.outputs.environment_management }}
          slack_webhook_url: ${{ needs.fetch-secrets.outputs.slack_webhook_url }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}

      - name: Set Account Number
        run: |
          ACCOUNT_NUMBER=$(jq -r -e --arg account_name "${ACCOUNT_NAME}" '.account_ids[$account_name]' <<< $ENVIRONMENT_MANAGEMENT)
          echo "::add-mask::$ACCOUNT_NUMBER"
          echo "ACCOUNT_NUMBER=${ACCOUNT_NUMBER}" >> $GITHUB_ENV

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
        with:
          role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_NUMBER }}:role/github-actions"
          role-session-name: githubactionsrolesession
          aws-region: ${{ env.AWS_REGION }}

      - name: Load and Configure Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: "~1"
          terraform_wrapper: false

      - name: Plan after nuke - ${{ matrix.nuke_accts }}
        run: |
          terraform --version
          echo "Terraform Plan - ${ACCOUNT_NAME%-development}" # removes the -development suffix in order to get the directory name
          bash scripts/terraform-init.sh terraform/environments/${ACCOUNT_NAME%-development}
          terraform -chdir="terraform/environments/${ACCOUNT_NAME%-development}" workspace select "${ACCOUNT_NAME}"
          bash scripts/terraform-plan.sh terraform/environments/${ACCOUNT_NAME%-development}

      - name: Apply after nuke - ${{ matrix.nuke_accts }}
        if: ${{ github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main') }}
        run: |
          terraform --version
          echo "Terraform apply - ${ACCOUNT_NAME%-development}" # removes the -development suffix in order to get the directory name
          bash scripts/terraform-init.sh terraform/environments/${ACCOUNT_NAME%-development}
          terraform -chdir="terraform/environments/${ACCOUNT_NAME%-development}" workspace select "${ACCOUNT_NAME}"
          bash scripts/terraform-apply.sh terraform/environments/${ACCOUNT_NAME%-development}

      - name: Slack failure notification
        uses: slackapi/slack-github-action@91efab103c0de0a537f72a35f6b8cda0ee76bf0a # v2.1.1
        with:
          webhook-type: incoming-webhook
          payload: |
            {"blocks":[{"type": "section","text": {"type": "mrkdwn","text": ":no_entry: Failed GitHub Action:"}},{"type": "section","fields":[{"type": "mrkdwn","text": "*Workflow:*\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ github.workflow }}>"},{"type": "mrkdwn","text": "*Job:*\n${{ github.job }}"},{"type": "mrkdwn","text": "*Repo:*\n${{ github.repository }}"}]}]}
        env:
          SLACK_WEBHOOK_URL: ${{ env.SLACK_WEBHOOK_URL }}
        if: ${{ failure() }}

    env:
      ACCOUNT_NAME: ${{ matrix.nuke_accts }}
